<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Apache Camel 3 - Top 10 of What's New</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sv3hLK39ljg/apache-camel-3-top-10-of-whats-new.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_top_10_of_what_s_new</id><updated>2019-12-02T19:09:02Z</updated><published>2019-12-02T19:09:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Today I posted a &lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/"&gt;blog on the Apache Camel 3 website&lt;/a&gt; with a top 10 of what's new in the brand new Apache Camel v3 release.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-VvnBGXwbvyI/XeVhDRlpd2I/AAAAAAAACB8/PifRKJtZQOYwAI7F1au1cGOv4Xr5EcN_QCLcBGAsYHQ/s1600/camel3-3humps.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="496" data-original-width="578" height="274" src="https://1.bp.blogspot.com/-VvnBGXwbvyI/XeVhDRlpd2I/AAAAAAAACB8/PifRKJtZQOYwAI7F1au1cGOv4Xr5EcN_QCLcBGAsYHQ/s320/camel3-3humps.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;So head over to the &lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/"&gt;Camel website&lt;/a&gt; and read the blog post.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=U4a-OwbE808:-0MubjsAznc:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=U4a-OwbE808:-0MubjsAznc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=U4a-OwbE808:-0MubjsAznc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/U4a-OwbE808" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sv3hLK39ljg" height="1" width="1" alt=""/&gt;</content><summary>Today I posted a blog on the Apache Camel 3 website with a top 10 of what's new in the brand new Apache Camel v3 release. So head over to the Camel website and read the blog post.</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-12-02T19:09:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/U4a-OwbE808/apache-camel-3-top-10-of-whats-new.html</feedburner:origLink></entry><entry><title>Infinispan's new image</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7f-Uy01xkRg/" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><author><name>Ryan Emerson</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_s_new_image</id><updated>2019-12-02T16:11:53Z</updated><published>2019-12-02T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Infinispan 10 introduced a &lt;a href="https://infinispan.org/blog/2019/11/11/serverng/"&gt;new server&lt;/a&gt;, which does not utilise the same launch commands and configuration as the legacy 9.4 wildfly based server. Therefore, we decided that this was an excellent opportunity to rewrite our container image from scratch to better suite the capabilities of the new server and to provide all the functionality required by the &lt;a href="https://infinispan.org/blog/2019/11/25/infinispan-operator-1/"&gt;Infinispan Operator&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This post focuses on the server image’s architecture. Future blog posts will focus on more advanced configurations, as well as example usage and deployment scenarios such as deploying a cluster using Kubernetes StatefulSets.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_show_me_the_code"&gt;&lt;a class="anchor" href="#_show_me_the_code"&gt;&lt;/a&gt;Show me the code!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The source code for the Infinispan image has a new home. The image can be found at &lt;a href="https://github.com/infinispan/infinispan-images" class="bare"&gt;https://github.com/infinispan/infinispan-images&lt;/a&gt;. Currently this repository only contains the server image, however our intention is for this to also be the home for all future Infinispan related images.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_wheres_the_dockerfile"&gt;&lt;a class="anchor" href="#_wheres_the_dockerfile"&gt;&lt;/a&gt;Where’s the Dockerfile?&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The most noticable change when looking at the repository is that there is no &lt;code&gt;Dockerfile&lt;/code&gt; in the source tree. This is because we decided to utilise the open-source tool &lt;a href="https://cekit.io/"&gt;CEKit&lt;/a&gt; to build our images. CEKit is an image creation tool that allows container images to be created using multiple build engines (e.g. docker, &lt;a href="https://buildah.io/"&gt;Buildah&lt;/a&gt;, &lt;a href="https://podman.io/"&gt;Podman&lt;/a&gt;) with a single configuration. Installation instructions can be found &lt;a href="https://docs.cekit.io/en/latest/handbook/installation/instructions.html"&gt;here&lt;/a&gt;, but the basic command to create a Docker based image is as follows.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;cekit build docker&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;CEKit leverages &lt;code&gt;.yaml&lt;/code&gt; files for all configuration, opposed to a Dockerfile, as this allows for build time overriding of image properties. For example, with CEKit it’s possible to override the server artifact version without modifying any files, instead the following is passed as a build parameter.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;cekit build --overrides '{"artifacts": [{"name": "server.zip", "path": "infinispan-server-10.0.0-SNAPSHOT.zip"}]}' docker&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More detailed instructions about how to build the server image from source can be found in the &lt;a href="https://github.com/infinispan/infinispan-images/tree/10.0.x#creating-images"&gt;image’s documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_ok_so_where_can_i_get_a_pre_built_image"&gt;&lt;a class="anchor" href="#_ok_so_where_can_i_get_a_pre_built_image"&gt;&lt;/a&gt;Ok so where can I get a pre-built image?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Previously the Infinispan images were deployed exclusively under the &lt;code&gt;jboss&lt;/code&gt; namespace at &lt;a href="https://hub.docker.com/r/jboss/infinispan-server/"&gt;jboss/infinispan-server&lt;/a&gt;, however this repository has now been deprecated and will be removed eventually.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Instead, all Infinispan images will now be released under the &lt;code&gt;infinispan&lt;/code&gt; namespace and are hosted at both &lt;a href="https://quay.io/infinispan/server"&gt;Quay.io&lt;/a&gt; and &lt;a href="https://hub.docker.com/r/infinispan/server"&gt;Docker Hub&lt;/a&gt;, as &lt;code&gt;quay.io/infinispan/server&lt;/code&gt; and &lt;code&gt;infinispan/server&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_getting_started"&gt;&lt;a class="anchor" href="#_getting_started"&gt;&lt;/a&gt;Getting Started&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get started with infinispan server on your local machine simply execute:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;docker run -p 11222:11222 infinispan/server&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default the image has authentication enabled on all exposed endpoints. When executing the above command the image automatically generates a username/password combo, prints the values to stdout and then starts the Infinispan server with the authenticated Hotrod and Rest endpoints exposed on port 11222. Therefore, it’s necessary to utilise the printed credentials when attempting to access the exposed endpoints via clients.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It’s also possible to provide a username/password combination via environment variables like so:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;docker run -p 11222:11222 -e USER="Titus Bramble" -e PASS="Shambles" infinispan/server&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_connecting_via_hotrod"&gt;&lt;a class="anchor" href="#_connecting_via_hotrod"&gt;&lt;/a&gt;Connecting via Hotrod&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Using the credentials passed in the command above, it is now possible to connect via the HotRod client using the following &lt;code&gt;hotrod-client.properties&lt;/code&gt; file. Note, that the following SASL properties must be configured on your client, with the username and password properties changed as required, otherwise the connection will fail:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;infinispan.remote.auth-realm=default infinispan.remote.auth-server-name=infinispan infinispan.remote.auth-username=Titus Bramble infinispan.remote.auth-password=Shambles&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_connecting_via_rest"&gt;&lt;a class="anchor" href="#_connecting_via_rest"&gt;&lt;/a&gt;Connecting via REST&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The REST endpoint is configured to utilise the DIGEST protocol, therefore it’s necessary for the HTTP client to authenticate requests. For example, the name of all caches can be retrieved via the following curl command:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt; curl --digest -u "Titus Bramble:Shambles" http://localhost:11222/rest/v2/cache&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_further_reading"&gt;&lt;a class="anchor" href="#_further_reading"&gt;&lt;/a&gt;Further Reading&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more detailed information abou how to use the image, please consult the &lt;a href="https://github.com/infinispan/infinispan-images/blob/10.0.x/README.md"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the next blog post we will look at how the server can be configured for more advanced use-cases by supplying configuration and identity &lt;code&gt;.yaml&lt;/code&gt; files.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us"&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="http://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.jboss.org/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7f-Uy01xkRg" height="1" width="1" alt=""/&gt;</content><summary>Infinispan 10 introduced a new server, which does not utilise the same launch commands and configuration as the legacy 9.4 wildfly based server. Therefore, we decided that this was an excellent opportunity to rewrite our container image from scratch to better suite the capabilities of the new server and to provide all the functionality required by the Infinispan Operator. This post focuses on the ...</summary><dc:creator>Ryan Emerson</dc:creator><dc:date>2019-12-02T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2019/12/02/image/</feedburner:origLink></entry><entry><title>APIs as a Product: Get the value out of your APIs</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Hx6EL26diOc/" /><category term="Red Hat 3scale API Management" /><category term="Red Hat Integration" /><category term="API" /><category term="API as a Product" /><author><name>Nicolas Massé</name></author><id>https://developers.redhat.com/blog/?p=655407</id><updated>2019-12-02T08:00:50Z</updated><published>2019-12-02T08:00:50Z</published><content type="html">&lt;p&gt;APIs continue to spread, as seen in this 2019 report from &lt;a href="https://www.programmableweb.com/news/apis-show-faster-growth-rate-2019-previous-years/research/2019/07/17" target="_blank" rel="noopener noreferrer"&gt;ProgrammableWeb&lt;/a&gt;, which shows a 30% increase over last year&amp;#8217;s growth rate. More regulations are enforcing the use of APIs to open up companies and foster innovation. Think of the &lt;a href="https://www.gemalto.com/financial/ebanking/psd2"&gt;Payment Services Directive version two (PSD2)&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/resources/open-banking-technology-overview?source=searchresultlisting"&gt;open banking&lt;/a&gt;, and the public sector releasing 0pen data APIs. With such an abundance of APIs, it becomes increasingly crucial to get the value out of your APIs and differentiate yourself from the growing competition. It&amp;#8217;s time to design and manage your APIs as a Product.&lt;/p&gt; &lt;h2&gt;Change your organization&lt;/h2&gt; &lt;p&gt;Designing an API as a Product implies a lot of changes in the way APIs are designed and managed. It means changing your mindset from &amp;#8220;packaging existing services&amp;#8221; to &amp;#8220;fulfilling customer needs.&amp;#8221; For teams in charge of an API, this mindset implies being in charge of a product instead, and thus:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Focusing on customer needs rather than existing assets.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/02/25/full-api-lifecycle-management-a-primer/" target="_blank" rel="noopener noreferrer"&gt;Managing APIs continuously&lt;/a&gt; rather than for a project&amp;#8217;s lifetime.&lt;/li&gt; &lt;li&gt;Moving from finite resources to elastic computing.&lt;/li&gt; &lt;li&gt;Evolving from a central team specialized in APIs to product cross-functional teams with a variety of competencies.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In a nutshell, designing an API as a Product means:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Conceiving it specifically to solve a customer problem.&lt;/li&gt; &lt;li&gt;Setting shared indicators of the value delivered by the API.&lt;/li&gt; &lt;li&gt;Having a feedback loop to know what to improve.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Change your design process&lt;/h2&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-658177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-1024x445.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-1024x445.png" alt="Use API design thinking to design APIs as a product." width="640" height="278" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-1024x445.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-768x333.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;Designing APIs as a Product also means changing the way we craft APIs (by adopting &lt;em&gt;API design thinking&lt;/em&gt;):&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The first step of design thinking applied to APIs is focusing on the customers. Through their eyes, what is their pain? &lt;em&gt;Empathize&lt;/em&gt; means meeting with and listening to your potential new customers. You will discover their understanding, how they are organized, which technical ecosystem they use, etc.&lt;/li&gt; &lt;li&gt;Then, you would synthesize your findings to &lt;em&gt;define&lt;/em&gt; which problem they are trying to solve and identify the &lt;a href="https://jtbd.info/" target="_blank" rel="noopener noreferrer"&gt;Job to be Done&lt;/a&gt;. Customers wanting to perform a transaction to buy a pet and customers willing to synchronize their pet inventory would lead to two very different Petstore APIs.&lt;/li&gt; &lt;li&gt;Once defined, you can &lt;a href="https://developers.redhat.com/blog/2018/04/11/api-journey-idea-deployment-agile-part1/"&gt;foster new ideas through a process known as API Ideation&lt;/a&gt;. During this step, you knock up different API designs to see if one stands up as a plausible solution.&lt;/li&gt; &lt;li&gt;During the &lt;em&gt;API Prototyping&lt;/em&gt; phase, you &lt;a href="https://developers.redhat.com/blog/2018/04/19/api-journey-idea-deployment-agile-way-part2/"&gt;mock your API based on meaningful examples&lt;/a&gt; to end up with a working API. Other team members can give their feedback on your design attempt.&lt;/li&gt; &lt;li&gt;The penultimate step is to &lt;em&gt;get feedback&lt;/em&gt; on your final design from your early adopters and thus refine the business expectations for your API.&lt;/li&gt; &lt;li&gt;Finally, you &lt;em&gt;implement&lt;/em&gt; the actual API.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Open source communities to help you design APIs as a Product&lt;/h2&gt; &lt;p&gt;So far, we have only spoken about organizational changes. Dedicated tools and open source communities can help you succeed in designing and managing APIs as a Product:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://microcks.github.io/" target="_blank" rel="noopener noreferrer"&gt;Microcks&lt;/a&gt; is the open source Kubernetes-native tool for API mocking and testing that helps you during the &lt;em&gt;Ideation&lt;/em&gt; and &lt;em&gt;Prototyping&lt;/em&gt; phases.&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.apicur.io/" target="_blank" rel="noopener noreferrer"&gt;Apicurio&lt;/a&gt; helps you design better API contracts in a collaborative fashion. Architects, product owners, designers, and developers can work together on the API designs.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/3scale/overview"&gt;Red Hat 3scale API Management&lt;/a&gt; eases the design and management of APIs as a Product by promoting the API designs, collecting feedback, and actually managing your APIs as a Product.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the next article, we&amp;#8217;ll look at how the most recent version of 3scale actually helps you build APIs as a Product.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#038;title=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" data-a2a-url="https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/" data-a2a-title="APIs as a Product: Get the value out of your APIs"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/"&gt;APIs as a Product: Get the value out of your APIs&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Hx6EL26diOc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;APIs continue to spread, as seen in this 2019 report from ProgrammableWeb, which shows a 30% increase over last year&amp;#8217;s growth rate. More regulations are enforcing the use of APIs to open up companies and foster innovation. Think of the Payment Services Directive version two (PSD2), open banking, and the public sector releasing 0pen data [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/"&gt;APIs as a Product: Get the value out of your APIs&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">655407</post-id><dc:creator>Nicolas Massé</dc:creator><dc:date>2019-12-02T08:00:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/</feedburner:origLink></entry><entry><title>New Eclipse MicroProfile book provides introduction to enterprise Java microservices</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xqfh8dfDl8g/" /><category term="Java" /><category term="Microservices" /><category term="Modern App Dev" /><category term="book" /><category term="MicroProfile" /><author><name>Heiko Rupp</name></author><id>https://developers.redhat.com/blog/?p=635337</id><updated>2019-12-02T08:00:15Z</updated><published>2019-12-02T08:00:15Z</published><content type="html">&lt;p&gt;Fellow Red Hat associates &lt;a href="https://developers.redhat.com/blog/author/csaavedra/"&gt;Cesar Saavedra&lt;/a&gt;, Pavol Loffay, Jeff Mesnil, &lt;a href="https://developers.redhat.com/blog/author/asdurand/"&gt;Antoine Sabot-Durand&lt;/a&gt;, Scott Stark, and I have written a book on &lt;a href="https://microprofile.io/"&gt;Eclipse MicroProfile&lt;/a&gt;, called &lt;em&gt;&lt;a href="https://www.packtpub.com/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;&lt;span class="base" data-ui-id="page-title-wrapper"&gt;Hands-On Enterprise Java Microservices with Eclipse MicroProfile&lt;/span&gt;&lt;/a&gt;. &lt;/em&gt;&lt;/p&gt; &lt;p&gt;This 256-page book provides an introduction to microservices and why they are important, and it showcases Eclipse MicroProfile as a way to implement so-called 12-factor apps.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Now through December 15, you can use the following link and discount code to receive a 20% discount when purchasing this ebook through the Packt website.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.packtpub.com/in/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;&lt;em&gt;&lt;span class="base" data-ui-id="page-title-wrapper"&gt;Hands-On Enterprise Java Microservices with Eclipse MicroProfile&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Discount code: &lt;strong&gt;eclipse20&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-635337"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The book includes detailed explanations and examples for the following MicroProfile features: Config, Fault Tolerance, Health Check, JWT Propagation, Metrics, and OpenTracing. MicroProfile Implementations, Quarkus, and Interoperability are shown via a conference application example, and a working Eclipse MicroProfile code sample is provided. We also discuss future developments and using MicroProfile in multi-cloud environments.&lt;/p&gt; &lt;h3 class="page-title"&gt;&lt;a href="https://www.packtpub.com/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;&lt;span class="base" data-ui-id="page-title-wrapper"&gt;Hands-On Enterprise Java Microservices with Eclipse MicroProfile&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-636137 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-839x1024.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-839x1024.png" alt="Eclipse Microprofile" width="400" height="488" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-839x1024.png 839w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-246x300.png 246w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-768x937.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM.png 1092w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;/p&gt; &lt;p&gt;Visit the &lt;a href="https://www.packtpub.com/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;Packt website&lt;/a&gt; for more information.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#038;title=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" data-a2a-url="https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/" data-a2a-title="New Eclipse MicroProfile book provides introduction to enterprise Java microservices"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/"&gt;New Eclipse MicroProfile book provides introduction to enterprise Java microservices&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xqfh8dfDl8g" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Fellow Red Hat associates Cesar Saavedra, Pavol Loffay, Jeff Mesnil, Antoine Sabot-Durand, Scott Stark, and I have written a book on Eclipse MicroProfile, called Hands-On Enterprise Java Microservices with Eclipse MicroProfile.  This 256-page book provides an introduction to microservices and why they are important, and it showcases Eclipse MicroProfile as a way to implement so-called 12-factor [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/"&gt;New Eclipse MicroProfile book provides introduction to enterprise Java microservices&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">635337</post-id><dc:creator>Heiko Rupp</dc:creator><dc:date>2019-12-02T08:00:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/</feedburner:origLink></entry><entry><title>Code Ready Containers - Getting Started with Process Automation in the Cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ptuQ7jkG9Js/code-ready-containers-getting-started-with-process-automation.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyContainers" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-code_ready_containers_getting_started_with_process_automation_in_the_cloud</id><updated>2019-12-02T06:00:07Z</updated><published>2019-12-02T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-dbY8lsMzQJw/Xd1LLSQZlJI/AAAAAAAAwvs/m3n8QdK6aLANchi1pOGPZQmyfUGAs-ueACNcBGAsYHQ/s1600/rhcs-rhpam-ocp.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation" border="0" data-original-height="886" data-original-width="1600" height="177" src="https://1.bp.blogspot.com/-dbY8lsMzQJw/Xd1LLSQZlJI/AAAAAAAAwvs/m3n8QdK6aLANchi1pOGPZQmyfUGAs-ueACNcBGAsYHQ/s320/rhcs-rhpam-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;AppDev in the Cloud with Process Automation&lt;/td&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;Previously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by &lt;a href="https://www.schabell.org/2019/11/how-to-setup-openshift-container-platform-in-minutes.html" target="_blank"&gt;updating the Code Ready Containers Easy Install&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start leveraging this local container platform cluster for some cloud native development experience, focusing on bringing all the existing content up to date.&lt;br /&gt;&lt;br /&gt;This articles outlines getting started with the &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo" target="_blank"&gt;Red Hat Process Automation Easy Install project&lt;/a&gt; on the above installation as default, though you can point this installation to any existing OpenShift Container Platform (pass an IP address).&lt;br /&gt;&lt;br /&gt;Let's take a look at how easy it is to get started with &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo" target="_blank"&gt;Code Ready Containers Red Hat Process Automation Easy Install project&lt;/a&gt;.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-0N31aSoNTxU/Xd1KawUtCoI/AAAAAAAAwvk/7YvCHN9vr2IMkoR91KswFfDXz6WN0R6ewCNcBGAsYHQ/s1600/rhcs-rhpam-pod-ocp.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation " border="0" data-original-height="888" data-original-width="1600" height="177" src="https://1.bp.blogspot.com/-0N31aSoNTxU/Xd1KawUtCoI/AAAAAAAAwvk/7YvCHN9vr2IMkoR91KswFfDXz6WN0R6ewCNcBGAsYHQ/s320/rhcs-rhpam-pod-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Red Hat Process Automation tooling deployed on&lt;br /&gt;OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Anyone spending any time with the content found on &lt;a href="https://gitlab.com/redhatdemocentral" target="_blank"&gt;Red Hat Demo Central&lt;/a&gt; should notice that all projects are designed using a template for consistent installation experiences.&lt;br /&gt;&lt;br /&gt;This one is no different and you can follow the same installation steps you would expect in the readme file:&lt;br /&gt;&lt;br /&gt;&lt;h2 data-sourcepos="7:1-9:132" dir="auto"&gt;Install on OpenShift Container Platform&lt;/h2&gt;&lt;div data-sourcepos="9:1-10:83" dir="auto"&gt;There are two options to install and run this project on the OpenShift Container Platform (OCP); use your own existing installation or to install on Code Ready Containers which provides you with a local OCP cluster.&lt;/div&gt;&lt;ol data-sourcepos="12:1-13:0" dir="auto"&gt;&lt;li data-sourcepos="12:1-13:0"&gt;Ensure you have an OpenShift container based installation, such as one of the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul data-sourcepos="14:3-17:0" dir="auto"&gt;&lt;li data-sourcepos="14:3-15:0"&gt;&lt;div data-sourcepos="14:5-14:116"&gt;your own OpenShift installation, if using this you just need to pass the IP address to the init.{sh|bat} script.&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="16:3-17:0"&gt;&lt;div data-sourcepos="16:5-16:95"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo"&gt;Code Ready Containers Easy Install&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-sourcepos="18:1-23:0" dir="auto" start="2"&gt;&lt;li data-sourcepos="18:1-19:0"&gt;&lt;div data-sourcepos="18:4-18:148"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo/-/archive/master/rhcs-rhpam-install-demo-master.zip"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="20:1-21:0"&gt;&lt;div data-sourcepos="20:4-20:116"&gt;Download Red Hat JBoss EAP &amp;amp; Red Hat Process Automation Manager, add to installs directory (see installs/README).&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="22:1-23:0"&gt;&lt;div data-sourcepos="22:4-22:91"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges:&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using your own installation just point to Openshift Container Platform IP Address&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; $ ./init.sh 192.168.99.100 # example for OCP.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using Code Ready Containers or the Code Ready Containers Easy Install project, just add the cluster &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # address to HOST_IP variable found at the top of the init.{sh|bat} files, for example:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; # HOST_IP=api.crc.testing &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC5" lang="plaintext"&gt; # &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC6" lang="plaintext"&gt; # Now just run the script without any IP address arguments and it picks up that hostname as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC7" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC8" lang="plaintext"&gt; $ ./init.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div data-sourcepos="42:1-42:150" dir="auto"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div data-sourcepos="42:1-42:150" dir="auto"&gt;Now log in to Red Hat Process Automation Manager to start developing containerized process automation projects (the address will be generated by OCP):&lt;/div&gt;&lt;ul data-sourcepos="44:3-45:0" dir="auto"&gt;&lt;li data-sourcepos="44:3-45:0"&gt;Code Ready Container example: http:rhcs-rhpam-install-demo-appdev-in-cloud.apps-crc.testing/business-central ( u:erics / p:redhatpam1! )&lt;/li&gt;&lt;/ul&gt;&lt;div data-sourcepos="46:1-46:205" dir="auto"&gt;Not sure how to get started with Red Hat Process Automation Manager? Try one of these &lt;a href="https://bpmworkshop.gitlab.io/index-redhat.html#/3" rel=" noreferrer noopener" target="_blank"&gt;online workshops&lt;/a&gt; to build a first project from scratch.&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/t6NT-FHuhls" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ptuQ7jkG9Js" height="1" width="1" alt=""/&gt;</content><summary>AppDev in the Cloud with Process Automation Previously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by updating the Code Ready Containers Easy Install. As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start lev...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-12-02T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/t6NT-FHuhls/code-ready-containers-getting-started-with-process-automation.html</feedburner:origLink></entry><entry><title>Keycloak 8.0.1 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/cHjzvVYMLKE/keycloak-801-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><category term="Keycloak Release" scheme="searchisko:content:tags" /><author><name>Keycloak</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_8_0_1_released</id><updated>2019-12-02T00:00:00Z</updated><published>2019-12-02T00:00:00Z</published><content type="html">&lt;p&gt;To download the release go to &lt;a href="https://www.keycloak.org/downloads.html"&gt;Keycloak downloads&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;All resolved issues&lt;/h2&gt; &lt;p&gt;The full list of resolved issues are available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%208.0.1"&gt;JIRA&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Upgrading&lt;/h2&gt; &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="https://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/cHjzvVYMLKE" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to Keycloak downloads. All resolved issues The full list of resolved issues are available in JIRA Upgrading Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Keycloak</dc:creator><dc:date>2019-12-02T00:00:00Z</dc:date><feedburner:origLink>https://www.keycloak.org/2019/12/keycloak-801-released.html</feedburner:origLink></entry><entry><title>Apache Camel 3 is out!!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/aJweo0cd8SU/apache-camel-3-is-out.html" /><category term="announcements" scheme="searchisko:content:tags" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_jonanstey" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Jonathan Anstey</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_is_out</id><updated>2019-11-29T12:47:27Z</updated><published>2019-11-28T20:37:00Z</published><content type="html">Apache Camel 3.0.0 is &lt;a href="https://camel.apache.org/blog/release-3-0-0.html"&gt;out today&lt;/a&gt;! Why is this a big deal? Well, it's the first major Camel version released in TEN years. Yes, really :-) Camel 2 was released on August 25, 2009!&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/--m58_uLncPY/XeAu-o8BZEI/AAAAAAAAWFA/rl7Tauo9sUoGYgIvY0TWWDg-6HU9oa49wCLcBGAsYHQ/s1600/chameau-3-bossesV3-1-820x400.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="401" data-original-width="820" height="195" src="https://1.bp.blogspot.com/--m58_uLncPY/XeAu-o8BZEI/AAAAAAAAWFA/rl7Tauo9sUoGYgIvY0TWWDg-6HU9oa49wCLcBGAsYHQ/s400/chameau-3-bossesV3-1-820x400.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Apache Camel 2.x remains a rock solid integration framework used all around the world and will certainly live on for many years to come. But, for some changes (and to stick with semantic versioning) we really needed a major version bump. You can imagine over 10 years a project can accumulate a lot of "would be nice to do IF we could break API..." type issues :-) But don't be scared, the team managed to keep the migration as &lt;a href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html"&gt;painless as possible&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;So what did change? Claus has a nice diagram of the &lt;a href="http://www.davsclaus.com/2019/10/apache-camel-3-is-only-2-months-away.html"&gt;major changes&lt;/a&gt; but there was definitely a focus on making camel-core smaller by breaking it up into modules (it was getting massive and size is becoming increasingly important in a cloud native world) and switching&amp;nbsp;to a more performant reactive routing engine. All told, since last year when we branched for Camel 3 development, over &lt;a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?version=12315691&amp;amp;projectId=12311211"&gt;1000 issues were resolved&lt;/a&gt;. It was a busy year for all involved!&lt;br /&gt;&lt;br /&gt;Next up are the releases of the other projects in the Camel ecosystem: &lt;a href="https://github.com/apache/camel-k/"&gt;Camel-K&lt;/a&gt;&amp;nbsp;(run Camel routes directly on Kubernetes) and &lt;a href="https://github.com/apache/camel-quarkus"&gt;Camel-Quarkus&lt;/a&gt;&amp;nbsp;(Camel components as &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt; extensions). Stay tuned.&lt;br /&gt;&lt;br /&gt;Thanks and congratulations to all involved in the release! Cheers!&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/aJweo0cd8SU" height="1" width="1" alt=""/&gt;</content><summary>Apache Camel 3.0.0 is out today! Why is this a big deal? Well, it's the first major Camel version released in TEN years. Yes, really :-) Camel 2 was released on August 25, 2009! Apache Camel 2.x remains a rock solid integration framework used all around the world and will certainly live on for many years to come. But, for some changes (and to stick with semantic versioning) we really needed a majo...</summary><dc:creator>Jonathan Anstey</dc:creator><dc:date>2019-11-28T20:37:00Z</dc:date><feedburner:origLink>http://janstey.blogspot.com/2019/11/apache-camel-3-is-out.html</feedburner:origLink></entry><entry><title>Handling Angular environments in continuous delivery with Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-IWSzmu67wg/" /><category term="CI/CD" /><category term="Cloud" /><category term="Containers" /><category term="OpenShift" /><category term="angular" /><author><name>Mikel Sanchez</name></author><id>https://developers.redhat.com/blog/?p=651797</id><updated>2019-11-27T08:00:20Z</updated><published>2019-11-27T08:00:20Z</published><content type="html">&lt;p&gt;In this article, I will cover how we can deploy the same &lt;a href="https://angular.io/guide/build" target="_blank" rel="noopener noreferrer"&gt;Angular&lt;/a&gt; application image but use a different configuration for each environment. Before we start, however, let&amp;#8217;s review what we mean when we talk about &amp;#8220;continuous delivery.&amp;#8221; &lt;span id="more-651797"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is continuous delivery?&lt;/h2&gt; &lt;p&gt;According to &lt;a href="https://www.continuousdelivery.com" target="_blank" rel="noopener noreferrer"&gt;ContinuousDelivery.com&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Continuous delivery is the ability to put changes of all types—including new features, configurations, bug fixes, and experiments—into production, or into the hands of users, &lt;em&gt;safely&lt;/em&gt; and &lt;em&gt;quickly&lt;/em&gt; in a &lt;em&gt;sustainable&lt;/em&gt; way.&lt;/p&gt; &lt;p&gt;Our goal is to make deployments—whether of a large-scale distributed system, a complex production environment, an embedded system, or an app—predictable, routine affairs that can be performed on demand.&lt;/p&gt; &lt;p&gt;We achieve all of this by ensuring that our code is &lt;em&gt;always&lt;/em&gt; in a deployable state, even in the face of teams of thousands of developers making changes on a daily basis. We thus completely eliminate the integration, testing, and hardening phases that traditionally followed &amp;#8220;dev complete,&amp;#8221; as well as code freezes.&lt;/p&gt;&lt;/blockquote&gt; &lt;h2&gt;How to handle Angular environments&lt;/h2&gt; &lt;p&gt;Angular applications typically have a config, containing settings like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;URLs to the APIs&lt;/li&gt; &lt;li&gt;App configuration based on the environment&lt;/li&gt; &lt;li&gt;Logs&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Angular&amp;#8217;s CLI offers &lt;a href="https://github.com/angular/angular-cli/wiki/stories-application-environments" target="_blank" rel="noopener noreferrer"&gt;application environments&lt;/a&gt; that set up the environment at build time.&lt;/p&gt; &lt;p&gt;In Angular, if you look into the &lt;code&gt;angular.json&lt;/code&gt; file, you can see how the app will be built and its environment-specific setup:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;"configurations": {             "production": {               "fileReplacements": [                 {                   "replace": "src/environments/environment.ts",                   "with": "src/environments/environment.prod.ts"                 }               ],&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;The &lt;code&gt;fileReplacements&lt;/code&gt; section lets you replace the files needed for each environment at build time.&lt;/p&gt; &lt;p&gt;We can deduce by looking into the code that when we run &lt;code&gt;ng build&lt;/code&gt; &lt;code&gt;--configuration=production&lt;/code&gt; the &lt;code&gt;src/envrionments/envrironment.ts&lt;/code&gt; file is replaced with &lt;code&gt;src/envrionments/envrionment.prod.ts&lt;/code&gt;. As a result, if you import &lt;code&gt;environments/environment.ts&lt;/code&gt; into your application to access the environment variables property, you will get the desired value.&lt;/p&gt; &lt;p&gt;Angular&amp;#8217;s CLI makes all the magic:&lt;/p&gt; &lt;pre&gt;import { Component } from '@angular/core'; import { environment } from './../environments/environment'; @Component({ selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css'] }) export class AppComponent { constructor() { console.log(environment.&amp;#60;property&amp;#62;); } title = 'app works!'; } &lt;/pre&gt; &lt;p&gt;But this setup is not good for continuous delivery, as we have one image for each environment, as shown in Figure 1:&lt;/p&gt; &lt;div id="attachment_651737" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-651737" class="wp-image-651737 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-1024x698.png" alt="" width="640" height="436" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-1024x698.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-300x205.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-768x524.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-651737" class="wp-caption-text"&gt;Figure 1: Not the best setup for continuous delivery.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;There is another approach, however. We can solve this problem by only building the image once and then promoting it to other environments using this approach:&lt;/p&gt; &lt;p&gt;Under &lt;code&gt;assets/config&lt;/code&gt;, create a JSON file with the properties:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;{     "server1": "url1",     "server2": "url2",     "server3": "url3" }&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Create a new provider:&lt;/p&gt; &lt;pre&gt;ng g s providers/appConfig&lt;/pre&gt; &lt;p&gt;Replace the contents with the following:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;import { Injectable } from '@angular/core'; import { HttpClient } from '@angular/common/http'; @Injectable({   providedIn: 'root' }) export class AppConfigService {   private config: any;   constructor(private http: HttpClient) { }   public loadConfig() {     return this.http.get('./assets/config/config.json')       .toPromise()       .then((config: any) =&amp;#62; {         this.config = config;         console.log(this.config);       })       .catch((err: any) =&amp;#62; {         console.error(err);       });   }   getConfig() {     return this.config;   } }&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Modify the &lt;code&gt;app.module.ts&lt;/code&gt; with the following code:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;import { BrowserModule } from '@angular/platform-browser'; import { NgModule, APP_INITIALIZER } from '@angular/core'; import { AppComponent } from './app.component'; import { AppConfigService } from './providers/app-config.service'; import { HttpClientModule } from '@angular/common/http'; export function initConfig(appConfig: AppConfigService) {   return () =&amp;#62; appConfig.loadConfig(); } @NgModule({   declarations: [     AppComponent   ],   imports: [     BrowserModule,     HttpClientModule   ],   providers: [{     provide: APP_INITIALIZER,     useFactory: initConfig,     deps: [AppConfigService],     multi: true,   }],   bootstrap: [AppComponent] }) export class AppModule { }&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Here, we added the &lt;code&gt;APP_INITIALIZER&lt;/code&gt; provider to load before the app&amp;#8217;s bootstrap, which lets us have the configuration before the app initialization. We then use a factory that calls &lt;code&gt;appService.loadConfig()&lt;/code&gt;. Then, if we want to use it from the component, we inject the service and get the config:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;import { Component } from '@angular/core'; import { HttpClient } from '@angular/common/http'; import { AppConfigService } from './providers/app-config.service'; @Component({   selector: 'app-root',   templateUrl: './app.component.html',   styleUrls: ['./app.component.css'] }) export class AppComponent {   title = 'app'; constructor(private http: HttpClient, private config: AppConfigService) { console.log(this.config.getConfig()); }&lt;/pre&gt; &lt;/div&gt; &lt;h2&gt;How to apply the configuration in Red Hat OpenShift&lt;/h2&gt; &lt;p&gt;To use our environment-specific configuration, we just need to create a &lt;code&gt;ConfigMap&lt;/code&gt; and then create a new volume from the &lt;code&gt;ConfigMap&lt;/code&gt;(We are going to suppose that the app is already deployed and using &lt;code&gt;nginx&lt;/code&gt; as base image)&lt;/p&gt; &lt;pre&gt;oc create configmap config --from-file=&amp;#60;configMapLocation&amp;#62;/config.json&lt;/pre&gt; &lt;p&gt;Now, set the volume in the deployment config:&lt;/p&gt; &lt;pre&gt;oc set volume dc/angular --add --type=configmap --configmap-name=config --mount-path=/opt/app-root/src/assets/config --overwrite&lt;/pre&gt; &lt;p&gt;Figure 2 shows what our architecture will ultimately look like:&lt;/p&gt; &lt;div id="attachment_651777" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-651777" class="wp-image-651777 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-1024x584.png" alt="" width="640" height="365" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-1024x584.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-300x171.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-768x438.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-651777" class="wp-caption-text"&gt;Figure 2: Our final architecture layout.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;I hope you found this article useful.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#038;title=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/" data-a2a-title="Handling Angular environments in continuous delivery with Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/"&gt;Handling Angular environments in continuous delivery with Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-IWSzmu67wg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, I will cover how we can deploy the same Angular application image but use a different configuration for each environment. Before we start, however, let&amp;#8217;s review what we mean when we talk about &amp;#8220;continuous delivery.&amp;#8221; What is continuous delivery? According to ContinuousDelivery.com: Continuous delivery is the ability to put changes of all [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/"&gt;Handling Angular environments in continuous delivery with Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">651797</post-id><dc:creator>Mikel Sanchez</dc:creator><dc:date>2019-11-27T08:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/</feedburner:origLink></entry><entry><title>Code Ready Containers - Getting Started with HR Employee Rewards Project in the Cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EUh0zS06--M/code-ready-containers-getting-started-with-hr-employee-rewards.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyContainers" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-code_ready_containers_getting_started_with_hr_employee_rewards_project_in_the_cloud</id><updated>2019-11-27T06:00:01Z</updated><published>2019-11-27T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-e8-A0G1vw6k/Xd0Iz_ewOaI/AAAAAAAAwvY/XCQ7K16HEoAw6-S3lEcAdRb6CF8ZJ_degCNcBGAsYHQ/s1600/process-designer.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="hr employee rewards" border="0" data-original-height="780" data-original-width="1600" height="156" src="https://1.bp.blogspot.com/-e8-A0G1vw6k/Xd0Iz_ewOaI/AAAAAAAAwvY/XCQ7K16HEoAw6-S3lEcAdRb6CF8ZJ_degCNcBGAsYHQ/s320/process-designer.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;AppDev in Cloud HR Employee Rewards&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Previously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by &lt;a href="https://www.schabell.org/2019/11/how-to-setup-openshift-container-platform-in-minutes.html" target="_blank"&gt;updating the Code Ready Containers Easy Install&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start leveraging this local container platform cluster for some cloud native development experience, focusing on bringing all the existing content up to date.&lt;br /&gt;&lt;br /&gt;This articles outlines getting started with the &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo" target="_blank"&gt;HR Employee Rewards project&lt;/a&gt; on the above installation as default, though you can point this installation to any existing OpenShift Container Platform (pass an IP address).&lt;br /&gt;&lt;br /&gt;Let's take a look at how easy it is to get started with &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo" target="_blank"&gt;Code Ready Containers HR Employee Rewards Demo&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Wb1Z1SZ-Nlk/Xd0IjCrTgiI/AAAAAAAAwvQ/zpJ2mLcS76EpY06dgUFAYRf3y9Pji0mtwCNcBGAsYHQ/s1600/rhcs-rewards-pod.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="hr employee rewards" border="0" data-original-height="990" data-original-width="1600" height="197" src="https://1.bp.blogspot.com/-Wb1Z1SZ-Nlk/Xd0IjCrTgiI/AAAAAAAAwvQ/zpJ2mLcS76EpY06dgUFAYRf3y9Pji0mtwCNcBGAsYHQ/s320/rhcs-rewards-pod.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;HR Employee Rewards deployed on&lt;br /&gt;OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Anyone spending any time with the content found on &lt;a href="https://gitlab.com/redhatdemocentral" target="_blank"&gt;Red Hat Demo Central&lt;/a&gt; should notice that all projects are designed using a template for consistent installation experiences.&lt;br /&gt;&lt;br /&gt;This one is no different and you can follow the same installation steps you would expect in the readme file:&lt;br /&gt;&lt;br /&gt;&lt;h2 data-sourcepos="10:1-12:132" dir="auto"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo" target="_blank"&gt;Install on OpenShift Container Platform&lt;/a&gt;&lt;/h2&gt;&lt;div data-sourcepos="12:1-13:83" dir="auto"&gt;There are two options to install and run this project on the OpenShift Container Platform (OCP); use your own existing installation or to install on Code Ready Containers which provides you with a local OCP cluster.&lt;/div&gt;&lt;ol data-sourcepos="15:1-16:0" dir="auto"&gt;&lt;li data-sourcepos="15:1-16:0"&gt;Ensure you have an OpenShift container based installation, such as one of the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul data-sourcepos="17:3-21:0" style="text-align: left;"&gt;&lt;li&gt;your own OpenShift installation, if using this, just pass the IP address to the init.{sh|bat} script.&lt;/li&gt;&lt;li data-sourcepos="19:3-21:0"&gt;&lt;div data-sourcepos="19:5-19:95"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo"&gt;Code Ready Containers Easy Install&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-sourcepos="22:1-27:0" dir="auto" start="2"&gt;&lt;li data-sourcepos="22:1-23:0"&gt;&lt;div data-sourcepos="22:4-22:136"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo/-/archive/master/rhcs-rewards-demo-master.zip"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="24:1-25:0"&gt;&lt;div data-sourcepos="24:4-24:116"&gt;Download Red Hat JBoss EAP &amp;amp; Red Hat Process Automation Manager, add to installs directory (see installs/README).&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="26:1-27:0"&gt;&lt;div data-sourcepos="26:4-26:91"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges:&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using your own installation just point to Openshift Container Platform IP Address&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; $ ./init.sh 192.168.99.100 # example for OCP.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" lang="plaintext"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" lang="plaintext"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using Code Ready Containers or the Code Ready Containers Easy Install project, just add the cluster &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # address to HOST_IP variable found at the top of the init.{sh|bat} files, for example:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; # HOST_IP=api.crc.testing &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC5" lang="plaintext"&gt; # &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC6" lang="plaintext"&gt; # Now just run the script without any IP address arguments and it picks up that hostname as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC7" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC8" lang="plaintext"&gt; $ ./init.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div data-sourcepos="46:1-46:151" dir="auto"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div data-sourcepos="46:1-46:151" dir="auto"&gt;Log in to the HR Employee Rewards project to start exploring an online employee rewards application (the address will be generated by the init script):&lt;/div&gt;&lt;ul data-sourcepos="48:3-49:0" dir="auto"&gt;&lt;li data-sourcepos="48:3-49:0"&gt;Code Ready Container example: http:rhcs-rewards-demo-appdev-in-cloud.apps-crc.testing/business-central ( u:erics / p:redhatpam1! )&lt;/li&gt;&lt;/ul&gt;Want to build the Rewards demo from scratch? Try this hands-on &lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab01.html" rel="nofollow noreferrer noopener" target="_blank"&gt;online workshop&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/Fz3qrlzaKrk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EUh0zS06--M" height="1" width="1" alt=""/&gt;</content><summary>AppDev in Cloud HR Employee RewardsPreviously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by updating the Code Ready Containers Easy Install. As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start leveraging t...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-27T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/Fz3qrlzaKrk/code-ready-containers-getting-started-with-hr-employee-rewards.html</feedburner:origLink></entry><entry><title>Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DoAIXDzFGZY/" /><category term="Integration" /><category term="OpenShift" /><category term="Red Hat 3scale API Management" /><category term="Red Hat Integration" /><category term="Apache Kafka" /><category term="Red Hat AMQ Streams" /><author><name>Hugo Guerrero</name></author><id>https://developers.redhat.com/blog/?p=658227</id><updated>2019-11-26T08:00:26Z</updated><published>2019-11-26T08:00:26Z</published><content type="html">&lt;p&gt;Red Hat continues to increase the features available for users looking to implement a 100% open source, &lt;a href="https://developers.redhat.com/topics/event-driven/"&gt;event-driven architecture&lt;/a&gt; (EDA) through running &lt;a href="https://developers.redhat.com/videos/youtube/QYbXDp4Vu-8/"&gt;Apache Kafka&lt;/a&gt; on &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Red Hat Enterprise Linux&lt;/a&gt;. The &lt;a href="https://www.redhat.com/en/products/integration"&gt;Red Hat Integration&lt;/a&gt; Q4 release provides new features and capabilities, including ones aimed at simplifying usage and deployment of the &lt;a href="https://www.redhat.com/en/resources/amq-streams-datasheet"&gt;AMQ streams&lt;/a&gt; distribution of Apache Kafka. &lt;span id="more-658227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Features available in this new version include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Service Registry as Technical Preview&lt;/li&gt; &lt;li&gt;HTTP-Kafka bridge is now generally available&lt;/li&gt; &lt;li&gt;Secure HTTP-Kafka bridge with 3scale API Management&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The addition of the service registry and the HTTP Kafka bridge improves Red Hat positioning as the 100% open source platform for cloud-native Kafka workloads. These new features become a suitable complement to the usage of the Kafka Operator for OpenShift based on the &lt;a href="https://strimzi.io/2019/09/06/cncf.html"&gt;CNCF sandbox project Strimzi&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Schema service registry for event-driven architecture&lt;/h2&gt; &lt;p&gt;Red Hat Integration’s service registry, based on the &lt;a href="https://www.apicur.io/"&gt;Apicurio project&lt;/a&gt; registry, provides a way to decouple the schema used to serialize and deserialize Kafka messages with the applications that are sending/receiving them. The registry is a store for schema (and API design) artifacts providing a REST API for access management and a set of optional rules for enforcing content validity and evolution.&lt;/p&gt; &lt;p&gt;The Apicurio service registry handles the following data formats:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Apache Avro&lt;/li&gt; &lt;li&gt;JSON Schema&lt;/li&gt; &lt;li&gt;Protobuf (protocol buffers)&lt;/li&gt; &lt;li&gt;OpenAPI&lt;/li&gt; &lt;li&gt;AsyncAPI&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition to the registry itself, users can leverage the included custom Kafka serializers and deserializers (SerDes). These SerDes Java classes allow Kafka applications to pull relevant schemas from the Service Registry instead of requiring the schemas to be bundled with the applications.&lt;/p&gt; &lt;p&gt;Correspondingly, the registry has its own REST API to create, update, and delete artifacts as well as managing global and per-artifact rules. The registry API is compatible with another Kafka provider’s schema registry to facilitate a seamless migration to AMQ Streams as a drop-in replacement.&lt;/p&gt; &lt;p&gt;For the upcoming &lt;a href="https://access.redhat.com/support/offerings/techpreview"&gt;technical preview&lt;/a&gt;, only the Avro format will be included in the service registry for the Red Hat Integration release.&lt;/p&gt; &lt;h2&gt;Connecting to Kafka through HTTP&lt;/h2&gt; &lt;p&gt;Apache Kafka uses a custom protocol on top of TCP/IP for communication between applications and the cluster. Clients are available for many different programming languages, but there are many scenarios in which a standard protocol such as HTTP/1.1 is more appropriate.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html-single/using_amq_streams_on_openshift/index#assembly-kafka-bridge-overview-str"&gt;Red Hat AMQ Streams Kafka Bridge&lt;/a&gt; provides an API for integrating HTTP-based clients with a Kafka cluster running on AMQ Streams. Applications can perform typical operations such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Sending messages to topics.&lt;/li&gt; &lt;li&gt;Subscribing to one or more topics.&lt;/li&gt; &lt;li&gt;Receiving messages from the subscribed topics.&lt;/li&gt; &lt;li&gt;Committing offsets related to the received messages.&lt;/li&gt; &lt;li&gt;Seeking to a specific position.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Users can deploy the Kafka Bridge into an OpenShift cluster by using the AMQ Streams Operator or similar to an AMQ Streams installation, and users can download the Kafka Bridge files for installation on Red Hat Enterprise Linux.&lt;/p&gt; &lt;p&gt;Users can provide TLS support, authentication, and authorization using the API Management capabilities of Red Hat Integration by &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html-single/using_amq_streams_on_openshift/index#kafka-bridge-3-scale-str"&gt;securing the Kafka Bridge with the 3scale&lt;/a&gt; component. Integration with API Management also means that additional features such as metrics, rate limiting, and billing are available.&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;The Red Hat Integration Q4 release makes Red Hat’s AMQ Streams distribution a better open source platform for cloud-native Kafka workloads. The Service Registry technical preview provides a common ground for data governance in the ever-changing domain of the event management bus. The general availability of the HTTP Bridge in Red Hat Integration enhances the options available to developers when building applications with Apache Kafka.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#038;title=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" data-a2a-url="https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/" data-a2a-title="Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/"&gt;Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DoAIXDzFGZY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat continues to increase the features available for users looking to implement a 100% open source, event-driven architecture (EDA) through running Apache Kafka on Red Hat OpenShift and Red Hat Enterprise Linux. The Red Hat Integration Q4 release provides new features and capabilities, including ones aimed at simplifying usage and deployment of the AMQ [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/"&gt;Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">658227</post-id><dc:creator>Hugo Guerrero</dc:creator><dc:date>2019-11-26T08:00:26Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/</feedburner:origLink></entry></feed>
