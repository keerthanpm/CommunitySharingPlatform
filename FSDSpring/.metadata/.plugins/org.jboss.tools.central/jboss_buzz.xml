<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Autoscaling Red Hat Fuse applications with OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ix1c52tseag/" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Spring Boot" scheme="searchisko:content:tags" /><author><name>Chandra Shekhar Pandey</name></author><id>searchisko:content:id:jbossorg_blog-autoscaling_red_hat_fuse_applications_with_openshift</id><updated>2019-11-11T08:00:07Z</updated><published>2019-11-11T08:00:07Z</published><content type="html">&lt;p&gt;In this article, we demonstrate &lt;a href="http://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&amp;#8217;s&lt;/a&gt; horizontal autoscaling feature with &lt;a href="https://developers.redhat.com/products/fuse/overview"&gt;Red Hat Fuse&lt;/a&gt; applications. The result is a Spring Boot-based application that uses the Apache Camel component &lt;a href="https://camel.apache.org/components/2.x/twitter-search-component.html" target="_blank" rel="noopener noreferrer"&gt;&lt;code&gt;twitter-search&lt;/code&gt;&lt;/a&gt; that searches Twitter for tweets based on specific keywords. If traffic or the number of tweets increases, and this application cannot serve all requests, then the application autoscales itself by increasing the number of pods. The ability to serve all requests is monitored by tracking this application&amp;#8217;s CPU utilization on a particular pod. Also, as soon as traffic or CPU utilization is back to normal, the number of pods is reduced to the minimum configured value.&lt;/p&gt; &lt;p&gt;There are two types of scaling: &lt;em&gt;horizontal&lt;/em&gt; and &lt;em&gt;vertical&lt;/em&gt;. Horizontal scaling is where the number of application instances or containers is increased. Vertical scaling is where system resources like CPU and memory are increased at the running application&amp;#8217;s or container&amp;#8217;s runtime. Horizontal scaling can be used for &lt;em&gt;stateless&lt;/em&gt; applications, whereas vertical scaling is more suitable for &lt;em&gt;stateful&lt;/em&gt; applications.&lt;span id="more-644747"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Autoscaling is useful when applications are deployed in a cloud environment from any of the cloud vendors, where users have to pay for resources like CPU and memory. It may happen that traffic is heavier on weekends or particular weekdays, or even for a few hours on a specific day, so having a static setup might cost more and not fully utilize system resources. Having a dynamic environment where applications can scale themselves reduces overall cost.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For demonstration and proof-of-concept purposes, we are using Red Hat OpenShift 3.11 and Red Hat Fuse 7.4. Our aim is to display one of the OpenShift features (autoscaling), which is not available with traditional applications.&lt;/p&gt; &lt;h3&gt;Prerequisites&lt;/h3&gt; &lt;p&gt;Follow the instructions in the official &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_fuse/7.4/html/fuse_on_openshift_guide/get-started-admin#configure-container-registry" target="_blank" rel="noopener noreferrer"&gt;Red Hat Fuse documentation&lt;/a&gt; to set up Red Hat Fuse 7.4 on OpenShift. OpenShift should automatically increase or decrease the scale of a replication controller, or deployment configuration, based on metrics collected from the pods. To collect these CPU and memory metrics from your pods, the &lt;code&gt;metrics&lt;/code&gt; server has to be installed on your OpenShift server to capture CPU and memory metrics from pods. Check out the &lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/pod_autoscaling.html" target="_blank" rel="noopener noreferrer"&gt;Pod Autoscaling guide&lt;/a&gt; for how to do this using Ansible.&lt;/p&gt; &lt;h2&gt;Create the application&lt;/h2&gt; &lt;p&gt;The code for this demonstration is available in &lt;a href="https://github.com/1984shekhar/camel-twitter-shift" target="_blank" rel="noopener noreferrer"&gt;my personal GitHub repository&lt;/a&gt;. Start by deploying this code to your OpenShift environment using the source-to-image (S2I) approach. First, select an application template from the OpenShift catalog. I selected Red Hat Fuse 7.4 Camel with Spring Boot, shown in Figure 1:&lt;/p&gt; &lt;div id="attachment_644947" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644947" class="wp-image-644947 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-1024x447.png" alt="The OpenShift catalog with an application template selected." width="640" height="279" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-1024x447.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-300x131.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-768x335.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644947" class="wp-caption-text"&gt;&lt;em&gt;Figure 1: The OpenShift catalog with an application template selected.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, point the Git Repository URL to the GitHub repository&amp;#8217;s link. In our case, this &lt;code&gt;camel-twitter-shift&lt;/code&gt; component searches tweets with the keywords &lt;code&gt;imcdemo,&lt;/code&gt; &lt;code&gt;RED_HAT_APAC&lt;/code&gt;, or &lt;code&gt;RedHatTelco&lt;/code&gt;. This component will poll Twitter for two minutes, which is configured with the &lt;code&gt;delay&lt;/code&gt; property and other properties that are user-specific.&lt;/p&gt; &lt;p&gt;Now, point Git Reference to the branch containing the actual code. I set it to &lt;code&gt;master&lt;/code&gt;, as you can see in Figure 2:&lt;/p&gt; &lt;div id="attachment_644957" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644957" class="wp-image-644957 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-1024x471.png" alt="Configuring the selected application template." width="640" height="294" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-1024x471.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-300x138.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-768x353.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644957" class="wp-caption-text"&gt;&lt;em&gt;Figure 2: Configuring the selected application template.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To get your &lt;code&gt;consumerKey&lt;/code&gt;, &lt;code&gt;consumerSecret&lt;/code&gt;, &lt;code&gt;accessToken&lt;/code&gt;, and &lt;code&gt;accessTokenSecret,&lt;/code&gt; register for the Standard API (which is free, though there are limitations) through the &lt;a href="https://developer.twitter.com/en/docs/basics/getting-started" target="_blank" rel="noopener noreferrer"&gt;Twitter developer platform&lt;/a&gt;. After consuming tweets for keywords, we then log them to the console with the Camel log component:&lt;/p&gt; &lt;pre&gt;&amp;#60;route id="twitter-search"&amp;#62; &amp;#60;from id="route-search" uri="twitter-search://imcdemo OR RED_HAT_APAC OR RedHatTelco?type=polling&amp;#38;amp;delay=120000&amp;#38;amp;consumerKey=dF&amp;#38;amp;consumerSecret=Ay&amp;#38;amp;accessToken=7d&amp;#38;amp;accessTokenSecret=9K"/&amp;#62; &amp;#60;log id="route-log-search" message="&amp;#62;&amp;#62;&amp;#62; ${body}"/&amp;#62; &amp;#60;/route&amp;#62; &lt;/pre&gt; &lt;h2&gt;Set up horizontal autoscaling&lt;/h2&gt; &lt;p&gt;We can set autoscaling for the &lt;code&gt;fuse74-camel-twitter&lt;/code&gt; deployment config with the following command. Note that &lt;code&gt;cpu-percent&lt;/code&gt; is set to 10, which means that as soon as CPU utilization is more than 10% for the pod, the application will scale new pods, with the maximum number of pods being five:&lt;/p&gt; &lt;pre&gt;cpandey@cpandey camel-twitter-shift]$ oc autoscale dc/fuse74-camel-twitter --min 1 --max 5 --cpu-percent=10 horizontalpodautoscaler.autoscaling/fuse74-camel-twitter autoscaled &lt;/pre&gt; &lt;p&gt;In Figure 3, the first red arrow points to the minimum and the maximum number of configured pods. The second arrow is the route with which we can access a pod from an external HTTP-based service or application. This setup is just to send HTTP traffic to the pod:&lt;/p&gt; &lt;div id="attachment_644937" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644937" class="wp-image-644937 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-1024x481.png" alt="Setting up autoscaling." width="640" height="301" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-1024x481.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-768x361.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644937" class="wp-caption-text"&gt;&lt;em&gt;Figure 3: Setting up autoscaling.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, let&amp;#8217;s get information from the horizontal pod autoscaler (HPA):&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey camel-twitter-shift]$ oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE fuse74-camel-twitter DeploymentConfig/fuse74-camel-twitter 10% 1 5 0 4s&lt;/pre&gt; &lt;p&gt;We can check OpenShift&amp;#8217;s GUI for the number of pods, as shown in Figure 4:&lt;/p&gt; &lt;div id="attachment_644997" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644997" class="wp-image-644997 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-1024x583.png" alt="The number of pods as shown in the OpenShift GUI." width="640" height="364" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-1024x583.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-300x171.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-768x438.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view.png 1469w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644997" class="wp-caption-text"&gt;&lt;em&gt;Figure 4: The number of pods as shown in the OpenShift GUI.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;However, I find the command line to be more informative, as at runtime it provides CPU utilization and the number of active pods:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey camel-twitter-shift]$ watch 'oc describe hpa fuse74-camel-twitter'&lt;/pre&gt; &lt;p&gt;You can find more on this command in the &lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/pod_autoscaling.html" target="_blank" rel="noopener noreferrer"&gt;OpenShift Pod Autoscaling docs&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Simulate traffic to the application&lt;/h2&gt; &lt;p&gt;To simulate traffic so that we can demonstrate the OpenShift autoscaler feature, there is another route that accepts HTTP requests. This route uses Camel&amp;#8217;s undertow &lt;code&gt;component&lt;/code&gt;, which starts the &lt;code&gt;undertow&lt;/code&gt; web container. This container listens on port 9956:&lt;/p&gt; &lt;pre&gt;&amp;#60;route id="load-route"&amp;#62; &amp;#60;from id="_from1" uri="undertow:http://0.0.0.0:9956/undertowTest"/&amp;#62; &amp;#60;convertBodyTo id="_convertBodyTo1" type="java.lang.String"/&amp;#62; &amp;#60;log id="_log1" loggingLevel="INFO" message="\n REQUEST RECEIVED :\n Headers: ${headers}\n Body: ${body} \n"/&amp;#62; &amp;#60;setBody id="_setBody1"&amp;#62; &amp;#60;constant&amp;#62;hello all&amp;#60;/constant&amp;#62; &amp;#60;/setBody&amp;#62; &amp;#60;/route&amp;#62;&lt;/pre&gt; &lt;p&gt;With the &lt;code&gt;loop.sh&lt;/code&gt; script, we can send requests to this route in bulk. One can run this script in three or four terminals so that there is concurrent traffic, which would increase CPU utilization quickly. This script is part of the project as well:&lt;/p&gt; &lt;pre&gt;#!/bin/bash for ((;;)) do curl http://demo-service-imc-demo.apps.csppnq.lab.pnq2.cee.redhat.com/undertowTest done&lt;/pre&gt; &lt;p&gt;See Figure 5 for the results in the GUI, and Figure 6 for the command-line version:&lt;/p&gt; &lt;div id="attachment_644977" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644977" class="wp-image-644977 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-1024x437.png" alt="Loop script results in the GUI." width="640" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-1024x437.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-300x128.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-768x328.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644977" class="wp-caption-text"&gt;&lt;em&gt;Figure 5: Loop script results in the GUI.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_644987" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644987" class="wp-image-644987 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-1024x347.png" alt="Loop script results on the command line." width="640" height="217" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-1024x347.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-300x102.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-768x260.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment.png 1497w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644987" class="wp-caption-text"&gt;&lt;em&gt;Figure 6: Loop script results on the command line.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If we stop these scripts from executing, then CPU utilization returns to normal:&lt;/p&gt; &lt;div id="attachment_644967" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644967" class="wp-image-644967 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-1024x343.png" alt="After stopping the loop script." width="640" height="214" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-1024x343.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-300x100.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-768x257.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement.png 1464w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644967" class="wp-caption-text"&gt;&lt;em&gt;Figure 7: After stopping the loop script.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Disable the horizontal pod autoscaler&lt;/h2&gt; &lt;p&gt;We can disable autoscaling with the following command:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey camel-twitter-shift]$ oc delete hpa fuse74-camel-twitter horizontalpodautoscaler.autoscaling "fuse74-camel-twitter" deleted&lt;/pre&gt; &lt;p&gt;That&amp;#8217;s it. I hope this demonstration helps you set up and use OpenShift&amp;#8217;s autoscaler feature with Red Hat Fuse applications, or any other application as well.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#038;title=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/11/11/autoscaling-red-hat-fuse-applications-with-openshift/" data-a2a-title="Autoscaling Red Hat Fuse applications with OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/11/autoscaling-red-hat-fuse-applications-with-openshift/"&gt;Autoscaling Red Hat Fuse applications with OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ix1c52tseag" height="1" width="1" alt=""/&gt;</content><summary>In this article, we demonstrate Red Hat OpenShift’s horizontal autoscaling feature with Red Hat Fuse applications. The result is a Spring Boot-based application that uses the Apache Camel component twitter-search that searches Twitter for tweets based on specific keywords. If traffic or the number of tweets increases, and this application cannot serve all requests, then the application autoscales ...</summary><dc:creator>Chandra Shekhar Pandey</dc:creator><dc:date>2019-11-11T08:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/11/autoscaling-red-hat-fuse-applications-with-openshift/</feedburner:origLink></entry><entry><title>New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/s01-OcNhEhw/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="Eclipse" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Containers" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Studio" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Jeff Maury</name></author><id>searchisko:content:id:jbossorg_blog-new_features_in_red_hat_codeready_studio_12_13_0_ga_and_jboss_tools_4_13_0_final_for_eclipse_2019_09</id><updated>2019-11-11T07:30:52Z</updated><published>2019-11-11T07:30:52Z</published><content type="html">&lt;p&gt;&lt;a href="http://tools.jboss.org/documentation/whatsnew/jbosstools/4.13.0.Final.html"&gt;JBoss Tools 4.13.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio 12.13&lt;/a&gt; for Eclipse 2019-09 are here and waiting for you. In this article, I&amp;#8217;ll cover the highlights of the new releases and show how to get started.&lt;/p&gt; &lt;p&gt;&lt;span id="more-649017"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio&lt;/a&gt; (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;pre&gt;java -jar codereadystudio-&amp;#60;installername&amp;#62;.jar&lt;/pre&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio requires a bit more.&lt;/p&gt; &lt;p&gt;This release requires at least Eclipse 4.13 (2019-09), but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2019-09/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.13 2019-09 JEE Bundle&lt;/a&gt; because then you get most of the dependencies pre-installed.&lt;/p&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;#8220;JBoss Tools&amp;#8221; or &amp;#8220;Red Hat CodeReady Studio.&amp;#8221;&lt;/p&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly:&lt;/p&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;h2 id="what-is-new"&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;Our main focus for this release was improvements for container-based development and bug fixing. Eclipse 2019-06 itself has a lot of new cool stuff, but I&amp;#8217;ll highlight just a few updates in both Eclipse 2019-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;h3 id="openshift"&gt;Red Hat OpenShift&lt;/h3&gt; &lt;h4 id="openshift-container-platform-4-2-support"&gt;OpenShift Container Platform 4.2 support&lt;/h4&gt; &lt;p&gt;With the new &lt;a href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;OpenShift Container Platform (OCP) 4.2&lt;/a&gt; now available (see the &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-expands-kubernetes-developer-experience-newest-version-red-hat-openshift-4" target="_blank" rel="noopener noreferrer"&gt;announcement&lt;/a&gt;), even if this is a major shift compared to OCP 3, Red Hat CodeReady Studio and JBoss Tools are compatible with this major release in a transparent way. Just define your connection to your OCP 4.2 based cluster as you did before for an OCP 3 cluster, and use the tooling!&lt;/p&gt; &lt;h4 id="codeready-containers-1-0-server-adapter"&gt;CodeReady Containers 1.0 Server Adapter&lt;/h4&gt; &lt;p&gt;A new server adapter has been added to support the next generation of CodeReady Containers 1.0. Although the server adapter itself has limited functionality, it is able to start and stop the CodeReady Containers virtual machine via its crc binary. Simply hit Ctrl+3 (Cmd+3 on OSX) and type &lt;code&gt;new server&lt;/code&gt;, which will bring up a command to set up a new server.&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://tools.stage.jboss.org/documentation/whatsnew/openshift/images/crc-server-adapter.png" alt="crc server adapter" /&gt;&lt;/p&gt; &lt;p&gt;Enter &lt;code&gt;crc&lt;/code&gt; in the filter textbox.&lt;/p&gt; &lt;p&gt;You should see the &lt;em&gt;Red Hat CodeReady Containers 1.0&lt;/em&gt; server adapter.&lt;/p&gt; &lt;p id="pdBgHkl"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png"&gt;&lt;img class=" size-full wp-image-649037 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png 601w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a-286x300.png 286w" sizes="(max-width: 601px) 100vw, 601px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select &lt;em&gt;Red Hat CodeReady Containers 1.0&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt;.&lt;/p&gt; &lt;p id="CXRwfPn"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png"&gt;&lt;img class=" size-full wp-image-649047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png 609w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37-290x300.png 290w" sizes="(max-width: 609px) 100vw, 609px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;All you have to do is set the location of the CodeReady Containers crc binary file and the pull secret file location, which can be downloaded from &lt;a class="bare" href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned"&gt;https://cloud.redhat.com/openshift/install/crc/installer-provisioned&lt;/a&gt;.&lt;/p&gt; &lt;p id="vmqfgiq"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png"&gt;&lt;img class=" size-full wp-image-649057 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png 603w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391-288x300.png 288w" sizes="(max-width: 603px) 100vw, 603px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once you’re finished, a new CodeReady Containers server adapter will then be created and visible in the Servers view.&lt;/p&gt; &lt;p id="qBXUONu"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png"&gt;&lt;img class=" size-full wp-image-649067 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png 993w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64-300x79.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64-768x203.png 768w" sizes="(max-width: 993px) 100vw, 993px" /&gt;&lt;/a&gt;Once the server is started, a new OpenShift connection should appear in the &lt;em&gt;OpenShift Explorer&lt;/em&gt; view, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly replicatable environment.&lt;/p&gt; &lt;h3 id="miwdVPP"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png"&gt;&lt;img class=" size-full wp-image-649077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png 995w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c-300x79.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c-768x203.png 768w" sizes="(max-width: 995px) 100vw, 995px" /&gt;&lt;/a&gt;Server tools&lt;/h3&gt; &lt;h4 id="wildfly-18-server-adapter"&gt;Wildfly 18 Server Adapter&lt;/h4&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 18. It adds support for Java EE 8 and Jakarta EE 8.&lt;/p&gt; &lt;h4 id="eap-7-3-beta-server-adapter"&gt;EAP 7.3 Beta Server Adapter&lt;/h4&gt; &lt;p&gt;A server adapter has been added to work with EAP 7.3 Beta.&lt;/p&gt; &lt;h3 id="hibernate-tools"&gt;Hibernate Tools&lt;/h3&gt; &lt;h4 id="hibernate-runtime-provider-updates"&gt;Hibernate Runtime Provider Updates&lt;/h4&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.7.Final and Hibernate Tools version 5.4.7.Final.&lt;/p&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.13.Final and Hibernate Tools version 5.3.13.Final.&lt;/p&gt; &lt;h3 id="platform"&gt;Platform&lt;/h3&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;h5 id="quick-search"&gt;Quick Search&lt;/h5&gt; &lt;p&gt;The new &lt;em&gt;Quick Search&lt;/em&gt; dialog provides a convenient, simple and fast way to run a textual search across your workspace and jump to matches in your code. The dialog provides a quick overview showing matching lines of text at a glance. It updates as quickly as you can type and allows for quick navigation using only the keyboard. A typical workflow starts by pressing the keyboard shortcut Ctrl+Alt+Shift+L (or Cmd+Alt+Shift+L on Mac). Typing a few letters updates the search result as you type. Use Up-Down arrow keys to select a match, then hit Enter to open it in an editor.&lt;/p&gt; &lt;p id="pHSOHma"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png"&gt;&lt;img class=" size-full wp-image-649087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png 720w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9-300x208.png 300w" sizes="(max-width: 720px) 100vw, 720px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="save-editor-when-project-explorer-has-focus"&gt;Save editor when Project Explorer has focus&lt;/h5&gt; &lt;p&gt;You can now save the active editor even when the Project Explorer has focus. In cases where an extension contributes Saveables to the Project Explorer, the extension is honored and the save action on the Project Explorer will save the provided saveable item instead of the active editor.&lt;/p&gt; &lt;p id="CTSUcva"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png"&gt;&lt;img class=" size-full wp-image-649097 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png 656w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab-300x105.png 300w" sizes="(max-width: 656px) 100vw, 656px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="show-in-context-menu-available-for-normal-resources"&gt;&amp;#8220;Show In&amp;#8221; context menu available for normal resources&lt;/h5&gt; &lt;p&gt;The &lt;em&gt;Show In&lt;/em&gt; context menu is now available for an element inside a resource project on the &lt;em&gt;Project Explorer&lt;/em&gt;.&lt;/p&gt; &lt;p id="EACPfRL"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png"&gt;&lt;img class=" size-full wp-image-649107 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png 582w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c-300x151.png 300w" sizes="(max-width: 582px) 100vw, 582px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="show-colors-for-additions-and-deletions-in-compare-viewer"&gt;Show colors for additions and deletions in Compare viewer&lt;/h5&gt; &lt;p&gt;In simple cases such as a two-way comparison or a three-way comparison with no merges and conflicts, the &lt;em&gt;Compare&lt;/em&gt; viewer now shows different colors, depending on whether text has been added, removed, or modified. The default colors are green, red, and black, respectively.&lt;/p&gt; &lt;p id="WZwBvIr"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png"&gt;&lt;img class=" size-full wp-image-649117 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png 467w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9-300x207.png 300w" sizes="(max-width: 467px) 100vw, 467px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The colors can be customized through usual theme customization approaches, including using related entries in the Colors and Fonts preference page.&lt;/p&gt; &lt;h5 id="editor-status-line-shows-more-selection-details"&gt;Editor status line shows more selection details&lt;/h5&gt; &lt;p&gt;The status line for Text Editors now shows the cursor position, and when the editor has something selected, it shows the number of characters in the selection as well. This also works in the block selection mode.&lt;/p&gt; &lt;p&gt;These two new additions to the status line can be disabled via the &lt;em&gt;General &amp;#62; Editors &amp;#62; Text Editors&lt;/em&gt; preference page.&lt;/p&gt; &lt;p id="FWOExwX"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png"&gt;&lt;img class=" size-full wp-image-649127 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png 675w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f-300x80.png 300w" sizes="(max-width: 675px) 100vw, 675px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="WozmhCk"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png"&gt;&lt;img class=" size-full wp-image-649137 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png 675w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375-300x80.png 300w" sizes="(max-width: 675px) 100vw, 675px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="shorter-dialog-text"&gt;Shorter dialog text&lt;/h5&gt; &lt;p&gt;Several dialog texts have been shortened. This allows you to capture important information faster.&lt;/p&gt; &lt;p&gt;Previously:&lt;/p&gt; &lt;p id="gkQxLJW"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png"&gt;&lt;img class=" size-full wp-image-649147 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png 611w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2-300x90.png 300w" sizes="(max-width: 611px) 100vw, 611px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now:&lt;/p&gt; &lt;p id="hvcRhOL"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png"&gt;&lt;img class=" size-full wp-image-649157 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png 613w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d-300x89.png 300w" sizes="(max-width: 613px) 100vw, 613px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="close-project-via-middle-click"&gt;Close project via middle-click&lt;/h5&gt; &lt;p&gt;In the Project Explorer, you can now close a project using middle-click.&lt;/p&gt; &lt;h4 id="debug"&gt;Debug&lt;/h4&gt; &lt;h5 id="improved-usability-of-environment-tab-in-launch-configurations"&gt;Improved usability of Environment tab in Launch Configurations&lt;/h5&gt; &lt;p&gt;In the &lt;em&gt;Environment &lt;/em&gt;tab of the &lt;em&gt;Launch Configuration&lt;/em&gt; dialog, you can now double-click on an environment variable name or value and start editing it directly from the table.&lt;/p&gt; &lt;p id="jlDQIQU"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png"&gt;&lt;img class=" size-full wp-image-649167 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944-300x113.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Right-clicking on the environment variable table now opens a context menu, allowing for quick addition, removal, copying, and pasting of environment variables.&lt;/p&gt; &lt;p id="lvnAjnF"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png"&gt;&lt;img class=" size-full wp-image-649177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png 505w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63-300x153.png 300w" sizes="(max-width: 505px) 100vw, 505px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="show-command-line-for-external-program-launch"&gt;Show Command Line for external program launch&lt;/h5&gt; &lt;p&gt;The &lt;em&gt;External Tools Configuration&lt;/em&gt; dialog for launching an external program now supports the &lt;em&gt;Show Command Line&lt;/em&gt; button.&lt;/p&gt; &lt;p id="YvIXtXZ"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png"&gt;&lt;img class=" size-full wp-image-649187 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8-300x249.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="preferences"&gt;Preferences&lt;/h4&gt; &lt;h5 id="close-editors-automatically-when-reaching-99-open-editors"&gt;Close editors automatically when reaching 99 open editors&lt;/h5&gt; &lt;p&gt;The preference to close editors automatically is now enabled by default. It will be triggered when you have opened 99 files. If you continue to open editors, old editors will be closed to protect you from performance problems. You can modify this setting in the &lt;em&gt;Preferences &lt;/em&gt;dialog via the &lt;em&gt;General &amp;#62; Editors &amp;#62; Close&lt;/em&gt; editors automatically preference.&lt;/p&gt; &lt;h5 id="in-table-color-previews-for-text-editor-appearance-color-options"&gt;In-table color previews for Text Editor appearance color options&lt;/h5&gt; &lt;p&gt;You can now see all the colors currently being used in &lt;em&gt;Text Editors&lt;/em&gt; from the &lt;em&gt;Appearance&lt;/em&gt; color options table, located in the &lt;em&gt;Preferences &amp;#62; General &amp;#62; Editors &amp;#62; Text Editor&lt;/em&gt; page.&lt;/p&gt; &lt;p id="kiZnGAv"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png"&gt;&lt;img class=" size-full wp-image-649197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="automatic-detection-of-ui-freezes-in-the-eclipse-sdk"&gt;Automatic detection of UI freezes in the Eclipse SDK&lt;/h5&gt; &lt;p&gt;The Eclipse SDK has been configured to show stack traces for UI freezes in the Error Log view by default for new workspaces. You can use this information to identify and report slow parts of the Eclipse IDE.&lt;/p&gt; &lt;p id="gzSfxaG"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png"&gt;&lt;img class=" size-full wp-image-649207 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png 585w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521-300x269.png 300w" sizes="(max-width: 585px) 100vw, 585px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can disable the monitoring or tweak its settings via the options in the &lt;em&gt;General &amp;#62; UI Responsiveness Monitoring&lt;/em&gt; preference page as shown below.&lt;/p&gt; &lt;p id="DWTLdpb"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png"&gt;&lt;img class=" size-full wp-image-649217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png 600w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf-300x272.png 300w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="themes-and-styling"&gt;Themes and Styling&lt;/h4&gt; &lt;h5 id="start-automatically-in-dark-theme-based-on-os-theme"&gt;Start automatically in dark theme based on OS theme&lt;/h5&gt; &lt;p&gt;On Linux and Mac, Eclipse can now start automatically in dark theme when the OS theme is dark. This works by default, that is on a new workspace or when the user has not explicitly set or changed the theme in Eclipse.&lt;/p&gt; &lt;h5 id="display-of-help-content-respects-os-theme"&gt;Display of Help content respects OS theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More and more operating systems provide a system-wide dark theme. Eclipse now respects this system-wide theme setting when the Eclipse help content is displayed in an external browser. A prerequisite for this is a browser that supports the prefers-color-scheme CSS media query.&lt;/p&gt; &lt;p&gt;As of the time of writing, the following browser versions support it:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Firefox version 67&lt;/li&gt; &lt;li&gt;Chrome version 76&lt;/li&gt; &lt;li&gt;Safari version 12.1&lt;/li&gt; &lt;/ul&gt; &lt;p id="vKFrhgY"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png"&gt;&lt;img class=" size-full wp-image-649237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-1024x766.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png 2018w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-300x224.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-768x575.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-1024x766.png 1024w" sizes="(max-width: 2018px) 100vw, 2018px" /&gt;&lt;/a&gt;Help content uses high-resolution icons.&lt;/p&gt; &lt;p&gt;The Help System, as well as the help content of the Eclipse Platform, the Java Development Tooling, and the Plug-in Development Environment, now uses high-resolution icons. They are now crisp on high-resolution displays and also look much better in the dark theme.&lt;/p&gt; &lt;p id="MgPdhll"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png"&gt;&lt;img class=" size-full wp-image-649247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-1024x838.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png 2236w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-300x246.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-768x629.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-1024x838.png 1024w" sizes="(max-width: 2236px) 100vw, 2236px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="improved-dark-theme-on-windows"&gt;Improved dark theme on Windows&lt;/h5&gt; &lt;p&gt;Labels, Sections, Checkboxes, Radio Buttons, FormTexts, and Sashes on forms now use the correct background color in the dark mode on windows.&lt;/p&gt; &lt;p id="eCZFkGA"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png"&gt;&lt;img class=" size-full wp-image-649257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-1024x520.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png 1218w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-300x152.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-768x390.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-1024x520.png 1024w" sizes="(max-width: 1218px) 100vw, 1218px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="general-updates"&gt;General Updates&lt;/h4&gt; &lt;h5 id="interactive-performance"&gt;Interactive performance&lt;/h5&gt; &lt;p&gt;Interactive performance has been further improved in this release and several UI freezes have been fixed.&lt;/p&gt; &lt;h5 id="show-key-bindings-when-command-is-invoked"&gt;Show key bindings when command is invoked&lt;/h5&gt; &lt;p&gt;For presentations, screencasts, and learning purposes, it is very helpful to show the corresponding key binding when a command is invoked. When the command is invoked (via a key binding or menu interaction) the key binding, the command’s name and description are shown on the screen.&lt;/p&gt; &lt;p id="GYMhyBt"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png"&gt;&lt;img class=" size-full wp-image-649267 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-1024x332.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png 1315w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-300x97.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-768x249.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-1024x332.png 1024w" sizes="(max-width: 1315px) 100vw, 1315px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can activate this in the &lt;em&gt;Preferences&lt;/em&gt; dialog via the &lt;em&gt;Show key binding when command is invoked&lt;/em&gt; checkbox on the &lt;em&gt;General &amp;#62; Keys&lt;/em&gt; preference page. To toggle this setting quickly, you can use the &lt;em&gt;Toggle Whether to Show Key Binding&lt;/em&gt; command (e.g., via the quick access).&lt;/p&gt; &lt;h3 id="java-developement-tools-jdt"&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;h4 id="java-13-support"&gt;Java 13 Support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Java 13 is out, and Eclipse JDT supports Java 13 for 4.13 via Marketplace.&lt;/p&gt; &lt;p&gt;The release notably includes the following Java 13 features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JEP 354: Switch Expressions (Preview).&lt;/li&gt; &lt;li&gt;JEP 355: Text Blocks (Preview).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Please note that these are preview language features; hence, the &lt;em&gt;enable preview&lt;/em&gt; option should be on. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java13/Examples"&gt;Java 13 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;h4 id="java-views-and-dialogs"&gt;Java Views and Dialogs&lt;/h4&gt; &lt;h5 id="synchronize-standard-and-error-output-in-console"&gt;Synchronize standard and error output in console&lt;/h5&gt; &lt;p&gt;The &lt;em&gt;Eclipse Console&lt;/em&gt; view currently can not ensure that mixed standard and error output is shown in the same order as it is produced by the running process. For Java applications, the launch configuration &lt;em&gt;Common&lt;/em&gt; tab now provides an option to merge standard and error output. This ensures that standard and error output is shown in the same order it was produced but also disables the individual coloring of error output.&lt;/p&gt; &lt;p id="gIOygVd"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png"&gt;&lt;img class=" size-full wp-image-649277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png 508w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373-182x300.png 182w" sizes="(max-width: 508px) 100vw, 508px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="java-editor"&gt;Java Editor&lt;/h4&gt; &lt;h5 id="convert-to-enhanced-for-loop-using-collections"&gt;Convert to enhanced &amp;#8216;for&amp;#8217; loop using Collections&lt;/h5&gt; &lt;p&gt;The Java quickfix/cleanup &lt;em&gt;Convert to enhanced &amp;#8216;for&amp;#8217; loop&lt;/em&gt; is now offered on &lt;code&gt;for&lt;/code&gt; loops that are iterating through Collections. The loop must reference the &lt;code&gt;size&lt;/code&gt; method as part of the condition and if accessing elements in the body, must use the &lt;code&gt;get&lt;/code&gt; method. All other Collection methods other than &lt;code&gt;isEmpty&lt;/code&gt; invalidate the quickfix being offered.&lt;/p&gt; &lt;p id="sPapTUy"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png"&gt;&lt;img class=" size-full wp-image-649287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d-300x136.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="YEvemaq"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png"&gt;&lt;img class=" size-full wp-image-649297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png 571w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307-300x120.png 300w" sizes="(max-width: 571px) 100vw, 571px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="AHsmwvS"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png"&gt;&lt;img class=" size-full wp-image-649307 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png 424w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf-300x161.png 300w" sizes="(max-width: 424px) 100vw, 424px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="initialize-final-fields"&gt;Initialize &amp;#8216;final&amp;#8217; fields&lt;/h5&gt; &lt;p&gt;A Java quickfix is now offered to initialize an uninitialized &lt;code&gt;final&lt;/code&gt; field in the class constructor. The fix will initialize a &lt;code&gt;String&lt;/code&gt; to the empty string, a numeric base type to 0, and, for class fields, it initializes them using their default constructor if available or &lt;code&gt;null&lt;/code&gt; if no default constructor exists.&lt;/p&gt; &lt;p id="mawdFOH"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png"&gt;&lt;img class=" size-full wp-image-649317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png 567w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01-300x147.png 300w" sizes="(max-width: 567px) 100vw, 567px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="ZsqgmUv"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png"&gt;&lt;img class=" size-full wp-image-649327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png 565w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e-300x140.png 300w" sizes="(max-width: 565px) 100vw, 565px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="autoboxing-and-unboxing"&gt;Autoboxing and Unboxing&lt;/h5&gt; &lt;p&gt;Use &lt;em&gt;Autoboxing&lt;/em&gt; and &lt;em&gt;Unboxing&lt;/em&gt; when possible. These features are enabled only for Java 5 and higher.&lt;/p&gt; &lt;p id="lNmXHIs"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png"&gt;&lt;img class=" size-full wp-image-649337 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png 409w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f-300x154.png 300w" sizes="(max-width: 409px) 100vw, 409px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="improved-redundant-modifier-removal"&gt;Improved redundant modifier removal&lt;/h5&gt; &lt;p&gt;The &lt;em&gt;Remove redundant modifier&lt;/em&gt; now also removes useless &lt;code&gt;abstract&lt;/code&gt; modifier on the interfaces.&lt;/p&gt; &lt;p id="AXlqKLQ"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png"&gt;&lt;img class=" size-full wp-image-649347 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png 720w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e-300x215.png 300w" sizes="(max-width: 720px) 100vw, 720px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;p id="JHNZiFo"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png"&gt;&lt;img class=" size-full wp-image-649357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png 459w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7-300x87.png 300w" sizes="(max-width: 459px) 100vw, 459px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You get this:&lt;/p&gt; &lt;p id="AChNWYA"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png"&gt;&lt;img class=" size-full wp-image-649367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png 459w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a-300x86.png 300w" sizes="(max-width: 459px) 100vw, 459px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="javadoc-comment-generation-for-module"&gt;Javadoc comment generation for module&lt;/h5&gt; &lt;p&gt;Adding a Javadoc comment to a Java module (module-info.java) will result in automatic annotations being added per the new module comment preferences.&lt;/p&gt; &lt;p id="GdyeAMe"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png"&gt;&lt;img class=" size-full wp-image-649377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png 650w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d-286x300.png 286w" sizes="(max-width: 650px) 100vw, 650px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;$(tags)&lt;/code&gt; directive will add &lt;code&gt;@uses&lt;/code&gt; and &lt;code&gt;@provides&lt;/code&gt; tags for all uses and provides module statements.&lt;/p&gt; &lt;p id="fvoYQoK"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png"&gt;&lt;img class=" size-full wp-image-649387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png 626w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf-300x159.png 300w" sizes="(max-width: 626px) 100vw, 626px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="chain-completion-code-assist"&gt;Chain Completion Code Assist&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Code assist for &amp;#8220;Chain Template Proposals&amp;#8221; will be available. These will traverse reachable local variables, fields, and methods, to produce a chain whose return type is compatible with the expected type in a particular context.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The preference to enable the feature can be found in the &lt;em&gt;Advanced&lt;/em&gt; sub-menu of the &lt;em&gt;Content Assis&lt;/em&gt;t menu group (&lt;em&gt;Preferences &amp;#62; Java &amp;#62; Editor &amp;#62; Content Assist &amp;#62; Advanced&lt;/em&gt;).&lt;/p&gt; &lt;p id="KvCKJwO"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png"&gt;&lt;img class=" size-full wp-image-649397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc-300x151.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="java-formatter"&gt;Java Formatter&lt;/h4&gt; &lt;h5 id="remove-excess-blank-lines"&gt;Remove excess blank lines&lt;/h5&gt; &lt;p&gt;All the settings in the &lt;em&gt;Blank lines&lt;/em&gt; section can now be configured to remove excess blank lines, effectively taking precedence over the &lt;em&gt;Number of empty lines to preserve&lt;/em&gt; setting. Each setting has its own button to turn the feature on, right next to its number control. The button is enabled only if the selected number of lines is smaller than the &lt;em&gt;Number of empty lines to preserve;&lt;/em&gt; otherwise, any excess lines are removed anyway.&lt;/p&gt; &lt;p id="hvxYnRD"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png"&gt;&lt;img class=" size-full wp-image-649407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png 461w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d-300x146.png 300w" sizes="(max-width: 461px) 100vw, 461px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="changes-in-blank-lines-settings"&gt;Changes in blank lines settings&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There’s quite a lot of changes in the &lt;em&gt;Blank lines &lt;/em&gt;section of the formatter profile.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Some of the existing subsections and settings are now phrased differently to better express their function:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt;The &lt;em&gt;Blank lines within class declarations&lt;/em&gt; subsection is now &lt;em&gt;Blank lines within type declaration.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before first declaration&lt;/em&gt; is now &lt;em&gt;Before first member declaration.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before declarations of the same kind&lt;/em&gt; is now &lt;em&gt;Between member declarations of different kind.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before member class declarations&lt;/em&gt; is now &lt;em&gt;Between member type declarations.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before field declarations&lt;/em&gt; is now &lt;em&gt;Between field declarations.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before method declarations&lt;/em&gt; is now &lt;em&gt;Between method/constructor declarations.&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More importantly, a few new settings have been added to support more places where the number of empty lines can be controlled:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;After last member declaration&lt;/em&gt; in a type (to complement previously existing &lt;em&gt;Before first member declaration&lt;/em&gt; setting).&lt;/li&gt; &lt;li&gt;&lt;em&gt;Between abstract method declarations&lt;/em&gt; in a type (these cases were previously handled by &lt;em&gt;Between method/constructor declarations&lt;/em&gt;).&lt;/li&gt; &lt;li&gt;&lt;em&gt;At end of method/constructor body&lt;/em&gt; (to complement previously existing &lt;em&gt;At beginning of method/constructor body&lt;/em&gt; setting).&lt;/li&gt; &lt;li&gt;&lt;em&gt;At beginning of code block&lt;/em&gt; and &lt;em&gt;At end of code block.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before statement with code block&lt;/em&gt; and &lt;em&gt;After statement with code block.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Between statement groups in &amp;#8216;switch.&amp;#8217;&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Most of the new settings have been put in a new subsection &lt;em&gt;Blank lines within method/constructor declarations.&lt;/em&gt;&lt;/p&gt; &lt;p id="iEvaaJW"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png"&gt;&lt;img class=" size-full wp-image-649417 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png 461w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f-300x147.png 300w" sizes="(max-width: 461px) 100vw, 461px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="junit"&gt;JUnit&lt;/h4&gt; &lt;h5 id="junit-5-5-1"&gt;JUnit 5.5.1&lt;/h5&gt; &lt;p&gt;JUnit 5.5.1 is here and Eclipse JDT has been updated to use this version.&lt;/p&gt; &lt;h4 id="debug-2"&gt;Debug&lt;/h4&gt; &lt;h5 id="enhanced-support-for-patch-module-during-launch"&gt;Enhanced support for &amp;#8211;patch-module during launch&lt;/h5&gt; &lt;p&gt;The Java Launch Configuration now supports patching of different modules by different sources during the launch. This can be verified in the &lt;em&gt;Override Dependencies…​&lt;/em&gt; dialog in the &lt;em&gt;Dependencies&lt;/em&gt; tab in a Java Launch Configuration.&lt;/p&gt; &lt;p id="UPIgMIc"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png"&gt;&lt;img class=" size-full wp-image-649427 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png 486w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb-300x141.png 300w" sizes="(max-width: 486px) 100vw, 486px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="FVHSBeU"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png"&gt;&lt;img class=" size-full wp-image-649437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png 493w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578-300x269.png 300w" sizes="(max-width: 493px) 100vw, 493px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="java-build"&gt;Java Build&lt;/h4&gt; &lt;h5 id="full-build-on-jdt-core-preferences-change"&gt;Full build on JDT core preferences change&lt;/h5&gt; &lt;p&gt;Manually changing the settings file &lt;code&gt;.settings/org.eclipse.jdt.core.prefs&lt;/code&gt; of a project will result in a full project build, if the workspace auto-build is on. For example, pulling different settings from a git repository or generating the settings with a tool will now trigger a build. Note that this includes timestamp changes, even if actual settings file contents were not changed.&lt;/p&gt; &lt;p&gt;For the 4.13 release, it is possible to disable this new behavior with the VM property: &lt;code&gt;-Dorg.eclipse.disableAutoBuildOnSettingsChange=true&lt;/code&gt;. It is planned to remove this VM property in a future release.&lt;/p&gt; &lt;h3 id="and-more"&gt;And more…​&lt;/h3&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.13.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;h2 id="what-is-next"&gt;What is next?&lt;/h2&gt; &lt;p&gt;Having JBoss Tools 4.13.0 and Red Hat CodeReady Studio 12.13 out we are already working on the next release for Eclipse 2019-12.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#038;title=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" data-a2a-url="https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/" data-a2a-title="New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/"&gt;New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/s01-OcNhEhw" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.13.0 and Red Hat CodeReady Studio 12.13 for Eclipse 2019-09 are here and waiting for you. In this article, I’ll cover the highlights of the new releases and show how to get started. Installation Red Hat CodeReady Studio (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady Studio product page a...</summary><dc:creator>Jeff Maury</dc:creator><dc:date>2019-11-11T07:30:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/</feedburner:origLink></entry><entry><title>How to setup OpenShift Container Platform on your local machine in minutes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0pQsTdRojcw/how-to-setup-openshift-container-platform-in-minutes.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyStudio" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-how_to_setup_openshift_container_platform_on_your_local_machine_in_minutes</id><updated>2019-11-11T06:00:07Z</updated><published>2019-11-11T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="764" data-original-width="1110" height="220" src="https://1.bp.blogspot.com/-fonHfEZK46c/XcWOK8w6-kI/AAAAAAAAwtw/hA4DRURPdmwuWge82KloZ9NB6g8_3qMbACNcBGAsYHQ/s320/Screenshot%2B2019-11-08%2Bat%2B16.47.43.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;It's been awhile since I've talked about running OpenShift Container Platform on your local machine.&lt;br /&gt;&lt;br /&gt;This mean a container platform at your finger tips, one you can experience the joys of cloud native development and automated rolling deployments. Since I started pulling together ways to easily experience this with OpenShift Container Platform, back with &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank"&gt;version 3.3&lt;/a&gt; believe it or not, we've come a long ways.&lt;br /&gt;&lt;br /&gt;For some time now I've been waiting for the local installation that stopped being supported with &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank"&gt;OpenShift Container Platform 3.9&lt;/a&gt; to reappear in version 4.x. Well now it's finally here with the last release of OpenShift Container Platform 4.2, in the form of Code Ready Containers.&lt;br /&gt;&lt;br /&gt;The idea was to make this as streamlined of an experience as possible by using the same &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank"&gt;OpenShift Container Platform Easy Local Install project&lt;/a&gt;. Let's take a look at what this looks like.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The first focus was to have this work for Unix based operating systems using a single installation script. The secondary wish is to provide a windows based installation script.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Linux or Mac installation&lt;/h3&gt;This installation requires the following (all freely available):&lt;br /&gt;&lt;br /&gt;&lt;pre class="code highlight" lang="plaintext"&gt;&lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt;1. HyperKit for OSX, Hyper-V for Windows, or Libvirt for Linux&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt;2. Code Ready Containers (OCP 4.2)&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt;3. OpenShift Client (oc) v4.2.0&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;First you need to ensure your virtualization tooling is installed for your platform, just search online for how to do that or your specific platform. Second you need to download the Code Ready Containers. Finally, you need the OpenShift client. Normally you'd expect to have to track these last two down but we've made this all easy by just including checks during the installation. If you have something installed, it checks the version, if good then it moves on with next steps. If anything is missing or wrong version, the installation stops and notifies you where to find that component for your platform (including URL).&lt;br /&gt;&lt;br /&gt;Let's get started by downloading the &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo/-/archive/master/ocp-install-demo-master.zip" target="_blank"&gt;OpenShift Container Platform Easy Local Install Project and unzipping in some directory&lt;/a&gt;. This gives you a file called &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;span style="font-size: x-small;"&gt;ocp-install-demo-master.zip&lt;/span&gt;,&lt;/span&gt;just unzip and run the &lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;init.sh&lt;/span&gt;&lt;/span&gt; as follows:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ ./init.sh &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Follow the instructions as each of the dependencies is checked and you're provided with pointers to getting the versions you need for your platform. &lt;br /&gt;&lt;br /&gt;&lt;i&gt;Note: Each Code Ready Container download is tied to an embedded secret. This secret you need to download (link will be provided) as a file and you'll be asked to point to that secret to start your container platform. This pull-secret has a 30 day lifespan, so once it's expired you'll need to download both a new Code Ready Container AND a new pull-secret. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Once you've gotten all the dependencies sorted out, the install runs like this:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-zgpBf1bu4sU/XcWIMoyMHyI/AAAAAAAAwsw/J0nom9zPqAY0v4TSeX5NBVu_lHTvCtDlACNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.21.38.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1414" data-original-width="1264" height="640" src="https://1.bp.blogspot.com/-zgpBf1bu4sU/XcWIMoyMHyI/AAAAAAAAwsw/J0nom9zPqAY0v4TSeX5NBVu_lHTvCtDlACNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.21.38.png" width="571" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;A little ASCII art and then it's checking for my platforms virtualization (Hyperkit), then looking for the OpenShift client version 4.2 (oc client), then running a setup (crc setup).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ynR__THDufU/XcWJXHXWBhI/AAAAAAAAws8/qnDZmQkYFgIxSoDe44dcld0Y5cSj4JPWQCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.27.14.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="670" data-original-width="1200" height="355" src="https://1.bp.blogspot.com/-ynR__THDufU/XcWJXHXWBhI/AAAAAAAAws8/qnDZmQkYFgIxSoDe44dcld0Y5cSj4JPWQCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.27.14.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The next steps are providing the pull-secret-file, you can set this in the variables at the top of the installation script. Now the moment of truth, the Code Ready Containers cluster starts, which takes some time depending on your network (crc start). With a good networks it's about a five minute wait.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-cXUVFMazNBc/XcWJ8E6lnGI/AAAAAAAAwtE/-9adInVQM2IY1TaKdZsMmWWWBvOLU91DwCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.29.41.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="413" data-original-width="1600" height="164" src="https://1.bp.blogspot.com/-cXUVFMazNBc/XcWJ8E6lnGI/AAAAAAAAwtE/-9adInVQM2IY1TaKdZsMmWWWBvOLU91DwCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.29.41.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This is the logging you'll see as the OpenShift cluster starts on your local machine. The warning is normal, just some of the features have been trimmed to speed up deployment.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ANOqL4P-2V4/XcWKVwl8b2I/AAAAAAAAwtM/dc-jJY2AiyEuUgIu8MoHkYmbWfXvJf5AgCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.31.26.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1300" data-original-width="930" height="640" src="https://1.bp.blogspot.com/-ANOqL4P-2V4/XcWKVwl8b2I/AAAAAAAAwtM/dc-jJY2AiyEuUgIu8MoHkYmbWfXvJf5AgCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.31.26.png" width="456" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;At the end we'll retrieve the admin password for logging in to the cluster's console, pick up the host URL, test the deployment by logging in with our client (oc login), and finally you're given all the details in a nice box. You have the option to stop, start it again, or delete the OpenShift Container Platform cluster as shown in the dialog.&lt;br /&gt;&lt;br /&gt;Next open the web console using URL and login 'kubeadmin' with the corresponding password. In our case it's the URL: &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;"&gt;https://console-openshift-console.apps-crc.testing&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-yaW4ZQGESi4/XcWLXR_x4SI/AAAAAAAAwtc/Ek1HwcbAhOsc9J81--y3-ACI-UIXtQFYwCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.34.35.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="795" data-original-width="1600" height="318" src="https://1.bp.blogspot.com/-yaW4ZQGESi4/XcWLXR_x4SI/AAAAAAAAwtc/Ek1HwcbAhOsc9J81--y3-ACI-UIXtQFYwCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.34.35.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Log in with user: &lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubeadmin&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;Password in our case: &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;"&gt;wyozw-5ywAy-5yoap-7rj8q&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;That opens the main dashboard:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-7179roqgrYA/XcWLoFVtINI/AAAAAAAAwtk/C6v_BBxepTk2_qaw7fSNHpTzEStC8VcMACNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.35.03.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="883" data-original-width="1600" height="352" src="https://1.bp.blogspot.com/-7179roqgrYA/XcWLoFVtINI/AAAAAAAAwtk/C6v_BBxepTk2_qaw7fSNHpTzEStC8VcMACNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.35.03.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This concludes the installation of an OpenShift Container Platform on our local machine using Code Ready Containers.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;What about Windows?&lt;/h3&gt;If you are a sharp observer, you'll notice there is a file called &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo/blob/master/init.bat" target="_blank"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;init.bat&lt;/span&gt;&lt;/a&gt; for windows platforms to install with. The problem is I've not been able to test this yet on a windows machine, so I'd love to call out to the readers out there that might have some time to contribute to test this script and help us complete the installation. You'll notice a few TODO's marked in the scripts code, as they are untested areas in the installation.&lt;br /&gt;&lt;br /&gt;You can &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo/issues/new?issue%5Bassignee_id%5D=&amp;amp;issue%5Bmilestone_id%5D=" target="_blank"&gt;raise new issues here&lt;/a&gt; and help us complete the windows based installation and get your name added to the contributors list. We'd be really thankful!&lt;br /&gt;&lt;br /&gt;Stay tuned for more on cloud native development using other Red Hat technologies on your new OpenShift Container Platform installed locally on your own machine!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/j2IBGFQ40b4" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0pQsTdRojcw" height="1" width="1" alt=""/&gt;</content><summary>It's been awhile since I've talked about running OpenShift Container Platform on your local machine. This mean a container platform at your finger tips, one you can experience the joys of cloud native development and automated rolling deployments. Since I started pulling together ways to easily experience this with OpenShift Container Platform, back with version 3.3 believe it or not, we've come a...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-11T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/j2IBGFQ40b4/how-to-setup-openshift-container-platform-in-minutes.html</feedburner:origLink></entry><entry><title>Narayana 5.10.0.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XgUs70PfIaY/narayana-5100final-released.html" /><category term="feed_group_name_jbosstransactions" scheme="searchisko:content:tags" /><category term="feed_name_transactions" scheme="searchisko:content:tags" /><author><name>Michael Musgrove</name></author><id>searchisko:content:id:jbossorg_blog-narayana_5_10_0_final_released</id><updated>2019-11-08T10:24:48Z</updated><published>2019-11-08T10:24:00Z</published><content type="html">The team are pleased to announce our latest release of Narayana - the premier open source transaction manager.&lt;br /&gt;&lt;br /&gt;The release is available for &lt;a href="http://narayana.io/downloads/index.html"&gt;download&lt;/a&gt; from our website.&lt;br /&gt;It is a bug fix release and a list of what we fixed is available in the&amp;nbsp;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310200&amp;amp;version=12342779"&gt;release notes&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XgUs70PfIaY" height="1" width="1" alt=""/&gt;</content><summary>The team are pleased to announce our latest release of Narayana - the premier open source transaction manager. The release is available for download from our website. It is a bug fix release and a list of what we fixed is available in the release notes.</summary><dc:creator>Michael Musgrove</dc:creator><dc:date>2019-11-08T10:24:00Z</dc:date><feedburner:origLink>http://jbossts.blogspot.com/2019/11/narayana-5100final-released.html</feedburner:origLink></entry><entry><title>Quarkus: Modernize “helloworld” JBoss EAP quickstart, Part 2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/E8UX05Gow4M/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Marco Rizzi</name></author><id>searchisko:content:id:jbossorg_blog-quarkus_modernize_helloworld_jboss_eap_quickstart_part_2</id><updated>2019-11-08T08:00:59Z</updated><published>2019-11-08T08:00:59Z</published><content type="html">&lt;p id="memory-consumption"&gt;In &lt;a href="https://developers.redhat.com/blog/?p=642737"&gt;part one of this series&lt;/a&gt;, we took a detailed look at &lt;a href="https://github.com/jboss-developer/jboss-eap-quickstarts" target="_blank" rel="noopener noreferrer"&gt;Red Hat JBoss Enterprise Application Platform (JBoss EAP) quickstarts&lt;/a&gt; as a starting point for understanding how to modernize brownfield &lt;a href="https://developers.redhat.com/blog/2019/09/12/jakarta-ee-8-the-new-era-of-java-ee-explained/"&gt;Java EE 8&lt;/a&gt; applications that run on &lt;a href="https://developers.redhat.com/products/eap/"&gt;JBoss EAP&lt;/a&gt;. In this part, we&amp;#8217;ll continue our discussion of modernization with a look at memory consumption.&lt;/p&gt; &lt;p&gt;Measuring performances is a fundamental topic when dealing with a modernization process, and memory consumption reporting is part of performance analysis. It&amp;#8217;s worth starting with these tools from the very beginning so that they can be used to evaluate the improvements achieved during the modernization process.&lt;span id="more-648647"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;A detailed introduction to measuring memory usage is available in &lt;a href="https://quarkus.io/guides/performance-measure#how-do-we-measure-memory-usage" target="_blank" rel="noopener noreferrer"&gt;Measuring Performance—How do we measure memory usage?&lt;/a&gt; Quarkus guide.&lt;/p&gt; &lt;p&gt;In the following paragraphs, memory consumption data for the three different application flavors presented above (JBoss EAP, packaged JAR, and native executable) will be captured in a &lt;em&gt;Linux&lt;/em&gt; system using &lt;a href="https://linux.die.net/man/1/pmap"&gt;&lt;code&gt;pmap&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://linux.die.net/man/1/ps"&gt;&lt;code&gt;ps&lt;/code&gt;&lt;/a&gt; tools.&lt;/p&gt; &lt;h3 id="jboss-eap"&gt;JBoss EAP&lt;/h3&gt; &lt;p&gt;Start a JBoss EAP instance by following the &amp;#8220;&lt;a href="#deploy-helloworld"&gt;Deploy &lt;code&gt;helloworld&lt;/code&gt;&lt;/a&gt;&amp;#8221; section, and retrieve its PID (e.g., &lt;code&gt;7268&lt;/code&gt;) using the command:&lt;/p&gt; &lt;pre&gt;$ pgrep -lf jboss 7268 java &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;Add the &lt;code&gt;-a&lt;/code&gt; option to retrieve the full command line (i.e., &lt;code&gt;$ pgrep -af jboss&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;Now, the &lt;code&gt;7268&lt;/code&gt; PID can be used to execute the following two commands:&lt;/p&gt; &lt;pre&gt;$ ps -o pid,rss,command -p 7268 PID RSS COMMAND 7268 665348 java -D[Standalone] -server -verbose:gc -Xloggc:/home/mrizzi/Tools/jboss-eap-7.2.0/jboss-eap-7.2/standalone/log/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=3M -XX:-TraceClassUnloading -Xms1303m -Xmx1303m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferI &lt;/pre&gt; &lt;p&gt;and:&lt;/p&gt; &lt;pre&gt;$ pmap -x 7268 7268: java -D[Standalone] -server -verbose:gc -Xloggc:/home/mrizzi/Tools/jboss-eap-7.2.0/jboss-eap-7.2/standalone/log/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=3M -XX:-TraceClassUnloading -Xms1303m -Xmx1303m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -Dorg.jboss.boot.log.file=/home/mrizzi/Tools/jboss-eap-7.2.0/jboss-eap-7.2/standa Address Kbytes RSS Dirty Mode Mapping 00000000ae800000 1348608 435704 435704 rw--- [ anon ] 0000000100d00000 1035264 0 0 ----- [ anon ] 000055e4d2c2f000 4 4 0 r---- java 000055e4d2c30000 4 4 0 r-x-- java 000055e4d2c31000 4 0 0 r---- java 000055e4d2c32000 4 4 4 r---- java 000055e4d2c33000 4 4 4 rw--- java [...] ffffffffff600000 4 0 0 r-x-- [ anon ] ---------------- ------- ------- ------- total kB 3263224 672772 643024 &lt;/pre&gt; &lt;p&gt;Evaluating the &lt;code&gt;RSS&lt;/code&gt; values, it looks like JBoss EAP memory consumption is around 650MB.&lt;/p&gt; &lt;h3 id="packaged-jar"&gt;Packaged JAR&lt;/h3&gt; &lt;p&gt;Referring to the &amp;#8220;&lt;a href="#run-the-helloworld-packaged-jar"&gt;Run the &lt;code&gt;helloworld&lt;/code&gt; packaged JAR&lt;/a&gt;&amp;#8221; section, start the packaged JAR application by executing:&lt;/p&gt; &lt;pre&gt;$ java -jar ./target/helloworld-&lt;b&gt;&amp;#60;version&amp;#62;&lt;/b&gt;-runner.jar &lt;/pre&gt; &lt;p&gt;and retrieve its PID using again the &lt;code&gt;pgrep&lt;/code&gt; command (this time with the &lt;code&gt;-a&lt;/code&gt; option described in the note above):&lt;/p&gt; &lt;pre&gt;$ pgrep -af helloworld 6408 java -jar ./target/helloworld-&lt;b&gt;&amp;#60;version&amp;#62;&lt;/b&gt;-runner.jar &lt;/pre&gt; &lt;p&gt;Following the same process, use the &lt;code&gt;6408&lt;/code&gt; PID to evaluate memory consumption by executing:&lt;/p&gt; &lt;pre&gt;$ ps -o pid,rss,command -p 6408 PID RSS COMMAND 6408 125732 java -jar ./target/helloworld-quarkus-runner.jar &lt;/pre&gt; &lt;p&gt;and:&lt;/p&gt; &lt;pre&gt;$ pmap -x 6408 6408: java -jar ./target/helloworld-quarkus-runner.jar Address Kbytes RSS Dirty Mode Mapping 00000005d3200000 337408 0 0 rw--- [ anon ] 00000005e7b80000 5046272 0 0 ----- [ anon ] 000000071bb80000 168448 57576 57576 rw--- [ anon ] 0000000726000000 2523136 0 0 ----- [ anon ] 00000007c0000000 2176 2088 2088 rw--- [ anon ] 00000007c0220000 1046400 0 0 ----- [ anon ] 00005645b85d6000 4 4 0 r---- java 00005645b85d7000 4 4 0 r-x-- java 00005645b85d8000 4 0 0 r---- java 00005645b85d9000 4 4 4 r---- java 00005645b85da000 4 4 4 rw--- java [...] ffffffffff600000 4 0 0 r-x-- [ anon ] ---------------- ------- ------- ------- total kB 12421844 133784 115692 &lt;/pre&gt; &lt;p&gt;Evaluating the &lt;code&gt;RSS&lt;/code&gt; values, it looks like packaged JAR memory consumption is around 130MB.&lt;/p&gt; &lt;h3 id="native-executable"&gt;Native executable&lt;/h3&gt; &lt;p&gt;In this case, following the &amp;#8220;&lt;a href="#run-the-helloworld-native-executable"&gt;Run the &lt;code&gt;helloworld&lt;/code&gt; native executable&lt;/a&gt;&amp;#8221; section, the native executable application can be started with the command:&lt;/p&gt; &lt;pre&gt;$ ./target/helloworld-&lt;b&gt;&amp;#60;version&amp;#62;&lt;/b&gt;-runner &lt;/pre&gt; &lt;p&gt;Its PID can be retrieved with the same command used in the previous case:&lt;/p&gt; &lt;pre&gt;$ pgrep -af helloworld 6948 ./target/helloworld-&lt;b&gt;&amp;#60;version&amp;#62;&lt;/b&gt;-runner &lt;/pre&gt; &lt;p&gt;Then, use the &lt;code&gt;6948&lt;/code&gt; PID with the &lt;code&gt;ps&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; commands:&lt;/p&gt; &lt;pre&gt;$ ps -o pid,rss,command -p 6948 PID RSS COMMAND 6948 19084 ./target/helloworld-quarkus-runner &lt;/pre&gt; &lt;p&gt;and:&lt;/p&gt; &lt;pre&gt;$ pmap -x 6948 6948: ./target/helloworld-quarkus-runner Address Kbytes RSS Dirty Mode Mapping 0000000000400000 12 12 0 r---- helloworld-quarkus-runner 0000000000403000 10736 8368 0 r-x-- helloworld-quarkus-runner 0000000000e7f000 7812 6144 0 r---- helloworld-quarkus-runner 0000000001620000 2024 1448 308 rw--- helloworld-quarkus-runner 000000000181a000 4 4 4 r---- helloworld-quarkus-runner 000000000181b000 16 16 12 rw--- helloworld-quarkus-runner 0000000001e10000 1740 156 156 rw--- [ anon ] [...] ffffffffff600000 4 0 0 r-x-- [ anon ] ---------------- ------- ------- ------- total kB 1456800 20592 2684 &lt;/pre&gt; &lt;p&gt;Evaluating the &lt;code&gt;RSS&lt;/code&gt; values, it looks like native executable memory consumption is around 20MB.&lt;/p&gt; &lt;h3 id="memory-consumption-comparison"&gt;Memory consumption comparison&lt;/h3&gt; &lt;p&gt;In summary, the memory consumption data retrieved are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JBoss EAP: 650MB&lt;/li&gt; &lt;li&gt;Packaged JAR: 130MB&lt;/li&gt; &lt;li&gt;Native builder: 20MB&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, it&amp;#8217;s clear that there are advantages in terms of memory usage thanks to running the native executable.&lt;/p&gt; &lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In these articles, we explored how to modernize brownfield &lt;a href="https://developers.redhat.com/blog/2019/09/12/jakarta-ee-8-the-new-era-of-java-ee-explained/"&gt;Java EE 8&lt;/a&gt; applications that run on &lt;a href="https://developers.redhat.com/products/eap/"&gt;JBoss EAP &lt;/a&gt; and provided an overview of different ways to develop, build, and run an application. We also showed how to capture memory consumption data in order to evaluate the improvements achieved during the modernization process.  These concepts provide the fundamentals for understanding how Quarkus works and why it&amp;#8217;s so useful, no matter whether the app is a simple &lt;code&gt;helloworld&lt;/code&gt; quickstart or a more complex and production-level application.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#38;linkname=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2Fquarkus-modernize-helloworld-jboss-eap-quickstart-part-2%2F&amp;#038;title=Quarkus%3A%20Modernize%20%E2%80%9Chelloworld%E2%80%9D%20JBoss%20EAP%20quickstart%2C%20Part%202" data-a2a-url="https://developers.redhat.com/blog/2019/11/08/quarkus-modernize-helloworld-jboss-eap-quickstart-part-2/" data-a2a-title="Quarkus: Modernize “helloworld” JBoss EAP quickstart, Part 2"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/08/quarkus-modernize-helloworld-jboss-eap-quickstart-part-2/"&gt;Quarkus: Modernize &amp;#8220;helloworld&amp;#8221; JBoss EAP quickstart, Part 2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/E8UX05Gow4M" height="1" width="1" alt=""/&gt;</content><summary>In part one of this series, we took a detailed look at Red Hat JBoss Enterprise Application Platform (JBoss EAP) quickstarts as a starting point for understanding how to modernize brownfield Java EE 8 applications that run on JBoss EAP. In this part, we’ll continue our discussion of modernization with a look at memory consumption. Measuring performances is a fundamental topic when dealing with a m...</summary><dc:creator>Marco Rizzi</dc:creator><dc:date>2019-11-08T08:00:59Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/08/quarkus-modernize-helloworld-jboss-eap-quickstart-part-2/</feedburner:origLink></entry><entry><title>4 container usage takeaways from the 2019 Sysdig report</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fpRuGLYTkq8/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>David Strom</name></author><id>searchisko:content:id:jbossorg_blog-4_container_usage_takeaways_from_the_2019_sysdig_report</id><updated>2019-11-08T08:00:46Z</updated><published>2019-11-08T08:00:46Z</published><content type="html">&lt;p&gt;You probably already knew that most of the &lt;a href="https://developers.redhat.com/topics/containers/"&gt;containers&lt;/a&gt; created by developers are disposable, but did you realize that half of them are only around for less than five minutes? That and other fascinating details are available in &lt;a href="https://sysdig.com/blog/sysdig-2019-container-usage-report/"&gt;the latest annual container report from Sysdig&lt;/a&gt;, a container security and orchestration vendor.&lt;/p&gt; &lt;p&gt;This is the company’s third such report. The results are obtained from their own instrumentation collected from a five-day period last month of the more than 2 million containers used by their own customers. This means the results could be somewhat skewed toward more experienced container developers.&lt;span id="more-648247"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Nevertheless, the report merits some scrutiny. Here are four important takeaways.&lt;/p&gt; &lt;h3&gt;1. Containers are more disposable than most of us thought&lt;/h3&gt; &lt;p&gt;Last year’s report found that only a fifth of the containers lasted for less than five minutes. &lt;b&gt;This year found a fifth of containers operated for fewer than 10 seconds&lt;/b&gt;. That is a pretty significant jump. The report also found that half of the container images were replaced within a week. Taken together, these data points indicate a greater adoption of containers for more specific application and processing needs. But it also serves as a motivation for developers to ensure that no matter how short-lived, these containers need appropriate security measures.&lt;/p&gt; &lt;h3&gt;2. More than half have known security issues&lt;/h3&gt; &lt;p&gt;That brings up the next data point, where &lt;b&gt;more than half of the containers that Sysdig tools scanned were found to have known security vulnerabilities&lt;/b&gt;. These include common runtime mistakes, such as allowing files to be created below the &lt;em&gt;/etc&lt;/em&gt; and &lt;em&gt;/root&lt;/em&gt; directories, which could be sloppy programming or could indicate a potential malware threat. The report found a median of 21 containers running as root on the hosts surveyed, which again indicates a lack of rigor in how they are consumed and deployed by developers because a root-level container could potentially be used in a privilege escalation attack.&lt;/p&gt; &lt;h3&gt;3. Container density has doubled&lt;/h3&gt; &lt;p&gt;The report also found that &lt;b&gt;hosts were carrying twice the number of containers from last year&lt;/b&gt;, and a tenth of their customers are operating multiple public clouds to run their containers. Both show an increasing sophistication and maturity level, at least among Sysdig users. “With container density doubling since our last report, it’s evident that the rate of adoption is accelerating as usage matures,” said Suresh Vasudevan, Sysdig’s CEO, in their report.&lt;/p&gt; &lt;h3&gt;4. Red Hat OpenShift is in demand&lt;/h3&gt; &lt;p&gt;If you neglect the number of customers who are using Sysdig’s PaaS platform for on-premises deployments, &lt;strong&gt;&lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; comes out as being used by 43% of the customers for container orchestration and deployment.&lt;/strong&gt; The report authors say this shows that larger and more risk-averse organizations want the advantages of using &lt;a href="https://developers.redhat.com/developer-tools/kubernetes"&gt;Kubernetes&lt;/a&gt; but want to deploy it on a commercially supported platform.&lt;/p&gt; &lt;div id="attachment_648257" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648257" class="wp-image-648257 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/sysdig-report-1024x404.png" alt="Sysdig report" width="640" height="253" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/sysdig-report-1024x404.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/sysdig-report-300x118.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/sysdig-report-768x303.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-648257" class="wp-caption-text"&gt;&lt;em&gt;Image used with permission from Sysdig.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Also of interest to Red Hat developers is the report’s rise in usage of the &lt;a href="https://developers.redhat.com/blog/2019/01/29/podman-kubernetes-yaml/"&gt;CRI-O&lt;/a&gt; to 4% of containers. This tool is a lightweight container runtime for Kubernetes. The report’s authors “expect CRI-O’s use to climb over the coming years, especially as customers running Red Hat OpenShift migrate from v3 to v4, where CRI-O replaces the previously provided Docker engine.”&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#38;linkname=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F08%2F4-container-usage-takeaways-from-the-2019-sysdig-report%2F&amp;#038;title=4%20container%20usage%20takeaways%20from%20the%202019%20Sysdig%20report" data-a2a-url="https://developers.redhat.com/blog/2019/11/08/4-container-usage-takeaways-from-the-2019-sysdig-report/" data-a2a-title="4 container usage takeaways from the 2019 Sysdig report"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/08/4-container-usage-takeaways-from-the-2019-sysdig-report/"&gt;4 container usage takeaways from the 2019 Sysdig report&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fpRuGLYTkq8" height="1" width="1" alt=""/&gt;</content><summary>You probably already knew that most of the containers created by developers are disposable, but did you realize that half of them are only around for less than five minutes? That and other fascinating details are available in the latest annual container report from Sysdig, a container security and orchestration vendor. This is the company’s third such report. The results are obtained from their ow...</summary><dc:creator>David Strom</dc:creator><dc:date>2019-11-08T08:00:46Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/08/4-container-usage-takeaways-from-the-2019-sysdig-report/</feedburner:origLink></entry><entry><title>Red Hat Summit 2020 submissions</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PJ7RE3lqL6M/red-hat-summit-2020-submissions.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyStudio" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2020_submissions</id><updated>2019-11-08T06:00:00Z</updated><published>2019-11-08T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://reg.summit.redhat.com/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="625" data-original-width="1585" height="126" src="https://1.bp.blogspot.com/-XWdQUP29nkc/XcRFU57TXTI/AAAAAAAAwsk/EvBuCEj5XaAvkB2pkuabl2u9BYxyB86XQCNcBGAsYHQ/s320/Screenshot%2B2019-11-07%2Bat%2B16.38.47.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;It's that time of year again, where we all start putting our heads together and submitting our biggest ideas to the &lt;a href="https://reg.summit.redhat.com/" target="_blank"&gt;Red Hat Summit 2020 in San Francisco on Apr 27-29&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The last few years I've been lucky enough to head up the hands-on labs, meaning working with the selection team, the planning team, the labs development teams, the presenters, and finally the support teams on site. It's grown every year an last year was no less than 57 labs run for our attendees, with 6 of the top 10 voted sessions being hands-on labs. The top 3 of 4 for entire event where also hands-on labs sessions, so we're proud of our labs presenters!&lt;br /&gt;&lt;br /&gt;As you can imagine, that is a lot of work that has caused my participation in other areas (like presenting sessions myself) to decrease noticeably across that time span. This year I've been able to scale back my participation in hands-on labs to just the selection planning, with another team assuming the development and delivery management phases.&lt;br /&gt;&lt;br /&gt;Let's look at what this means for my participation in sharing open technology and ideas this year?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;Freeing up my time means assisting friends and colleague with presenting their ideas, such as the following selection of talks and workshops:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;5 Questions Everyone Ignores with Microservices&lt;/h3&gt;&lt;i&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. The choices you’ve got to make don’t preclude the daily work of developing amazing applications. From containers, cloud, multicloud, and beyond, microservices are the core infrastructure ensuring your organization's flexibility in the digital world. Funny enough, when discussing the development impact while transitioning to microservices, there are five questions that keep popping up in one form or another. These questions are the same regardless of organizational size and effect strategy discussions late in the process as organizations move towards microservice architectures. This session cover questions that everyone should ask about microservices. They're based on real life experiences in customer organizations around the world who are in the process of conquering microservices for existing development and for delivering modern applications. Join us for an hour of power, where real life developer experiences are used to highlight the lessons we're all learning as we transition our integration infrastructure into modern day microservices. (with&amp;nbsp; &lt;a href="https://twitter.com/RoelHodzelmans" target="_blank"&gt;Roel Hodzelmans&lt;/a&gt;) &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;A beginners guide to using and contributing to the open Solution Exchange&lt;/h3&gt;&lt;i&gt;Are you a solution builder and designer who wants to share your work in the spirit of open collaboration? Are you active with rules, decisions, event processing, or process automation and pull together solutions in these areas with Red Hat technologies? Then this is the session for you! With the open Solution Exchange you have a place to contribute solutions, big or small, for others to use. If you’re just interested in speeding up your current project you can browse and leverage existing solution pieces that are available in the open Solution Exchange. &lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt; &lt;i&gt;Learn more about this space designed to find, share, and collaborate on open source solutions. Soon you’ll find, learn, download, and test solutions that are ready to deploy in your existing projects. From small workflows to complex processes and applications. From on-premise solutions, to containers ready to run on OpenShift. The open Solution Exchange is your new one stop for leveraging the true power of sharing. Join us for an hour of power to learn how to become an expert user of the open Solution Exchange. (with Louis Cortez) &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Concept to Reality: An Advanced Agile Integration Blueprint &lt;/h3&gt;&lt;i&gt;Are you all in on the concept of agile integration or just getting your toe in the water? Are you an expert or just getting started with concepts like integration, microservices, message integration, process integration, APIs, and all the things that make your customers experience the best it can be? This session has something for all levels as it walks attendees through the architecture concepts with whiteboard diagrams, easy to grasp images, with a bottom up approach to connecting the dots for the concepts of an integration architecture. Once the groundwork has been laid, the second half of this session take a look at an integration architecture blueprint based on three successful customer integration solutions. Presenting the results of researching these successful solution architectures provides attendees with a clear blueprint for matching to their own architectures, or to help solidify their plans for architecting successful integration solutions. (with &lt;a href="https://twitter.com/Christina_wm" target="_blank"&gt;Christina Lin&lt;/a&gt;)&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Solving Retail Challenges Through Integration&lt;/h3&gt;&lt;i&gt;Digital disruption is causing a fundamental change in the Retail industry, forcing many retail businesses to reinvent themselves in the face of modern commerce. For example, customer buying decisions happen faster, channels to sell lack flexibility, traditional retail shopping experiences require adaptation, just to name a few. How do you keep up with one of the most dynamic and fast moving industries, let alone lead the pack? Join us for this session as Iain shares his insights into industry challenges and outlines how improved integration helps confront these issues. At the end of this session, you will leave with a better understanding of how modern, open source focused retail solutions such as Headless Commerce and integrated Point of Sale systems can deliver true advantage to retailers. Are you ready to embrace open source and take the lead? (with Iain Boyle)&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;DevOps Heroes - Adding Automation Integration to your Toolbox&lt;/h3&gt;&lt;i&gt;DevOps is more than the process of automating your CI/CD pipelines to generate code and deployment artifacts for production. It’s also about organizational change and integration of many subtle processes that help you deliver applications seamlessly from development to production through your operations. Let’s unlock the power of process integration with a hands-on workshop using your own devices (laptops). We’ll take you through the integration of an organizational process as part of your DevOps strategy. Step-by-step you’ll build a domain model, creating an automated process, integrating user approval tasks and more using modern open source process automation tooling. Bring your laptop as this is a hands-on experience that takes you from nothing to a fully working DevOps supporting automation integration project. No experience in automation integration is required. Let’s add a new tool to your development toolbox and get you jump started on automation integration that’s supporting your organizations DevOps activities. Note: The workshop materials is free and available online, attendees can use and enjoy after the event. (with&amp;nbsp;&lt;a href="https://twitter.com/kvarel4" target="_blank"&gt;Karina Varela&lt;/a&gt;)&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Agile Integration, because agile developers can’t wait for the IT department&lt;/h3&gt;&lt;i&gt;In digital business, nothing happens until something is integrated. The success (or failure) of a new service or application depends on its ability to communicate with other services, across an infrastructure, in scalable secure ways. That is the challenge of integration. While that’s a simple concept, there’s a lot of complexity in trying to work with different languages, APIs and protocols, different data formats, and different data requirements. The way that these integrations are designed and included in new applications can create new value and innovations for businesses. Historically, IT departments employed specialized tools and specialized developers to address integration, but that strategy serves as a bottleneck for fast moving innovation. This talk builds on the basics of the agile integration story providing; an overview of integration, storage, and other technologies compromising Red Hat’s integration solutions. We’ll discuss how to identify enterprise challenges and potential capabilities and solutions for those challenges. Finally, we’ll provide attendees with an overview of real customer examples and architectural blueprints based on their solutions. (with David Codelli)&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Commit to Excellence - Best Practices for Container Development&lt;/h3&gt;&lt;i&gt;Time to market and providing first class services to customers is more important now than ever before and with the rate of innovation in IT, organizations need to be able to respond to customers needs in days rather than months. The growing complexity of container runtimes leaves developers and their fun behind unfortunately. But it does not have to be that way. This session shows you how to bring the fun back into development when using containers. Code Ready Containers is tooling designed to get you started locally on your very own machine and experiencing the joy of an easy to use container platform. Push your code and enjoy the ease of integrated tooling that builds, tests, and kicks off rolling deployments directly from your favorite IDE. Eric and Markus share their best practises and get you started from the ground up with Code Ready Containers. Join us and start finding your joy with cloud native development right there on your very own local machine. (with &lt;a href="https://twitter.com/myfear" target="_blank"&gt;Markus Eisele&lt;/a&gt;)&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Designing Architectures Like a Boss&lt;/h3&gt;&lt;i&gt;Quickly and easily build architectural diagrams for your work that will impress your mother, your friends, and you customers! This workshop helps developers, architects, and consultants learn how to use a streamlined architecture diagramming tool focused on open source architectures. These architectures will help you illustrate how the open source solutions are implemented. Architecture diagrams you create are suitable for use in customer and prospect presentations, press articles, blog posts, website content, customer documentation and training and other influential materials. Your expertise and customer experience could drive architecture diagrams that not only change public opinion of your work, but also how you enable your colleagues in your organization. Be prepared to bring your own successful project implementations to life with beautifully illustrated diagrams after taking this workshop! (with &lt;a href="https://twitter.com/IoT_Ishu" target="_blank"&gt;Ishu Verma)&lt;/a&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Now it's fingers crossed and waiting on any acceptance letters!&lt;i&gt; &lt;/i&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ZkyPBRuFc30:dKNl9a_uz6g:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ZkyPBRuFc30:dKNl9a_uz6g:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ZkyPBRuFc30:dKNl9a_uz6g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ZkyPBRuFc30:dKNl9a_uz6g:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ZkyPBRuFc30:dKNl9a_uz6g:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/ZkyPBRuFc30" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PJ7RE3lqL6M" height="1" width="1" alt=""/&gt;</content><summary>It's that time of year again, where we all start putting our heads together and submitting our biggest ideas to the Red Hat Summit 2020 in San Francisco on Apr 27-29. The last few years I've been lucky enough to head up the hands-on labs, meaning working with the selection team, the planning team, the labs development teams, the presenters, and finally the support teams on site. It's grown every y...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-08T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/ZkyPBRuFc30/red-hat-summit-2020-submissions.html</feedburner:origLink></entry><entry><title>The Week in JBoss [2019-11-07] - Quarkus 1.0 Announced!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Gq6j8EimuAg/the-week-in-jboss-2019-11-07-quarkus-10-announced" /><category term="3scale" scheme="searchisko:content:tags" /><category term="EAP" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="rhdm" scheme="searchisko:content:tags" /><category term="RHPAM" scheme="searchisko:content:tags" /><author><name>Paul Robinson</name></author><id>searchisko:content:id:jbossorg_blog-the_week_in_jboss_2019_11_07_quarkus_1_0_announced</id><updated>2019-11-07T18:35:18Z</updated><published>2019-11-07T18:35:18Z</published><content type="html">&lt;!-- [DocumentBodyStart:05ad831e-e194-4d73-91c9-7d347e4589ff] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p style="text-align: center;"&gt;&lt;a href="https://quarkus.io/blog/announcing-quarkus-1-0/" rel="nofollow"&gt;&lt;img alt="" class="image-1 jive-image" height="258" src="https://developer.jboss.org/servlet/JiveServlet/downloadImage/38-6336-383435/pastedImage_1.png" style="max-width:409px; max-" width="409"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The big news this week is that &lt;a class="jive-link-external-small" href="https://quarkus.io/blog/announcing-quarkus-1-0/" rel="nofollow"&gt;Quarkus 1.0 was announced&lt;/a&gt;! If you've been involved or following the JBoss community recently you will likely have been hearing a lot about Quarkus. This new project has been getting a lot of attention as a framework for massively shrinking the memory footprint and boot times of Java applications. Thus making Java a preferred option in the Microservices and Serverless space. The first release candidate of Quarkus 1.0.0 became available this week, giving the Quarkus community an opportunity to discover any last-minute fixes needed before the imminent 1.0.0.Final release.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Reaching 1.0.0 of Quarkus has been a momentous effort by the community, of 177 contributors, in just 8 months since the initial public release. &lt;a class="jive-link-blog-small" data-containerId="1427" data-containerType="37" data-objectId="6335" data-objectType="38" href="https://developer.jboss.org/blogs/mark.little/2019/11/07/quarkus-10"&gt;Read here&lt;/a&gt; as Mark Little gives his perspective on this significant milestone and looks to the future.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;I'll leave it to Edson to provide a summary of the developer experience...&lt;/p&gt;&lt;blockquote class="twitter-tweet" style="font-family: 'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif;"&gt;&lt;p dir="ltr" lang="en"&gt;Life is too short to wait for you application to start/restart. Add something that sparks joy with &lt;a class="jive-link-external-small" href="https://twitter.com/QuarkusIO?ref_src=twsrc%5Etfw" rel="nofollow"&gt;@QuarkusIO&lt;/a&gt;! &lt;a href="/9.0.2.8500fd4/images/emojis/1f601.png"&gt;&lt;img class="jive_emoji jive-image" src="/9.0.2.8500fd4/images/emojis/1f601.png"/&gt;&lt;/a&gt;&lt;a href="/9.0.2.8500fd4/images/emojis/2764.png"&gt;&lt;img class="jive_emoji jive-image" src="/9.0.2.8500fd4/images/emojis/2764.png"/&gt;&lt;/a&gt;&lt;a href="/9.0.2.8500fd4/images/emojis/1f680.png"&gt;&lt;img class="jive_emoji jive-image" src="/9.0.2.8500fd4/images/emojis/1f680.png"/&gt;&lt;/a&gt; (Turn the sound on) &lt;a class="jive-link-external-small" href="https://t.co/IuCxzF9wiH" rel="nofollow"&gt;pic.twitter.com/IuCxzF9wiH&lt;/a&gt;&lt;/p&gt;&amp;mdash; Edson Yanaga (@yanaga) &lt;a class="jive-link-external-small" href="https://twitter.com/yanaga/status/1192137914425196544?ref_src=twsrc%5Etfw" rel="nofollow"&gt;November 6, 2019&lt;/a&gt;&lt;/blockquote&gt;&lt;p class="twitter-tweet" style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;How do I get started with Quarkus?&lt;/h3&gt;&lt;p&gt;&lt;span&gt;If you are looking to get started with Quarkus, then you are well served. The easiest way to get going is to visit &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://code.quarkus.io/" rel="nofollow"&gt;https://code.quarkus.io&lt;/a&gt;&lt;span&gt; to generate your first application. You can then read the &lt;/span&gt;&lt;a class="jive-link-external-small" href="https://quarkus.io/get-started/" rel="nofollow"&gt;getting started guide&lt;/a&gt; to learn how to get your application started and how to experience the lightning fast developer experience. Getting started applications are great, but there comes a time when you need to go beyond and learn the technologies required to build your real application. Quarkus has you covered there too with the &lt;a class="jive-link-external-small" href="https://quarkus.io/guides/" rel="nofollow"&gt;extensive guides section&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;How do I migrate my existing Java application to Quarkus?&lt;/h3&gt;&lt;p&gt;Earlier this week Marco Rizzi wrote a &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/11/07/quarkus-modernize-helloworld-jboss-eap-quickstart-part-1/" rel="nofollow"&gt;blog post&lt;/a&gt; showing you how to take a traditional Java EE application running on JBoss EAP and modify it to run on Quarkus. Marco demonstrates this using a simple Hello World style application, but the principles he follows will hopefully be of use to other porting a real application.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;Get hands-on experience with Kubernetes and Quarkus at DevNation Live in Austin&lt;/h3&gt;&lt;p&gt;In Austin on December 12th and excited about Quarkus? If so, come along to a &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/11/04/get-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin/" rel="nofollow"&gt;free DevNation:Live event &lt;/a&gt;and get hands on experience delivered by Red Hat experts.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 20px; font-weight: bold;"&gt;In Other News...&lt;/span&gt;&lt;/p&gt;&lt;p class="twitter-tweet"&gt;Despite the huge Quarkus news this week, the community has also been busy in other areas...&lt;/p&gt;&lt;p class="twitter-tweet" style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3 class="twitter-tweet"&gt;Managing JBoss EAP/Wildfly using Jcliff&lt;/h3&gt;&lt;p class="twitter-tweet"&gt;In &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/11/06/managing-jboss-eap-wildfly-using-jcliff/" rel="nofollow"&gt;this post&lt;/a&gt; Andrew Block and Romain Pelisse explain how to manage JBoss EAP using the Jcliff project. They show how this Java-based utility takes version-control friendly declarative configuration and applies it to your JBoss EAP installations.&lt;/p&gt;&lt;p class="twitter-tweet" style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3 class="twitter-tweet"&gt;How to Secure Microservices with Red Hat Single Sign-On, Fuse, and 3scale&lt;/h3&gt;&lt;p class="twitter-tweet"&gt;In &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/30/how-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale/" rel="nofollow"&gt;this comprehensive post&lt;/a&gt;, Raphael Abreu walks us through a proof of concept architecture for demonstrating how to protect APIs with Red Hat Single Sign-On (Keycloak) and 3scale.&lt;/p&gt;&lt;p class="twitter-tweet" style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3 class="twitter-tweet"&gt;Domain-specific Prometheus metrics with Red Hat Process Automation Manager and Decision Manager&lt;/h3&gt;&lt;p class="twitter-tweet"&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/31/domain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager/" rel="nofollow"&gt;Here&lt;/a&gt; Duncan Doyle shows how &lt;a class="jive-link-external-small" href="https://developers.redhat.com/products/rhpam/overview" rel="nofollow"&gt;Red Hat Process Automation Manager&lt;/a&gt; (RHPAM) and &lt;a class="jive-link-external-small" href="https://www.redhat.com/en/technologies/jboss-middleware/decision-manager" rel="nofollow"&gt;Red Hat Decision Manager&lt;/a&gt; (RHDM) can be connected to Prometheus for gathering domain-specific metrics.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:05ad831e-e194-4d73-91c9-7d347e4589ff] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Gq6j8EimuAg" height="1" width="1" alt=""/&gt;</content><summary>  The big news this week is that Quarkus 1.0 was announced! If you've been involved or following the JBoss community recently you will likely have been hearing a lot about Quarkus. This new project has been getting a lot of attention as a framework for massively shrinking the memory footprint and boot times of Java applications. Thus making Java a preferred option in the Microservices and Serverle...</summary><dc:creator>Paul Robinson</dc:creator><dc:date>2019-11-07T18:35:18Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/11/07/the-week-in-jboss-2019-11-07-quarkus-10-announced</feedburner:origLink></entry><entry><title>Quarkus 1.0</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rMly-80iKL0/quarkus-10" /><category term="feed_group_name_management" scheme="searchisko:content:tags" /><category term="feed_name_marklittle" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="OpenJDK" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Mark Little</name></author><id>searchisko:content:id:jbossorg_blog-quarkus_1_0</id><updated>2019-11-07T12:46:34Z</updated><published>2019-11-07T12:46:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:c1cabb3f-3967-407f-9501-e4cc3d27692a] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;By now you should all know that Quarkus 1.0 is out! Congratulations to the entire community team who have taken an initial idea we had in early 2018 through a public release almost a year later and then to a 1.0 only about 8 months after that. This is a significant milestone for everyone involved and particularly for helping to make Java relevant in the modern Kubernetes world. If you&amp;#8217;ve been involved in this, whether as a contributor of code, raising issues, tweeting your opinions etc. then you should all take a bow! &lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;I've seen frameworks and stacks come and go over the decades, with some of them being massively successful for their time. However, whether it's DCE, CORBA, JBoss itself, Spring ... I've never seen anything quite like Quarkus in terms of almost instantaneous popularity, the ability to capture the imagination of people, mine a deep-rooted need for Java developers and to create a new wave: true Kubernetes native Java middleware. As several people (non-Red Hatters/non-JBossians) have said, it truly feels like "a paradigm shift". It enables developers to bring their Java skills to Kubernetes and feel like they can be as productive (more productive) than developers using other languages.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;I&amp;#8217;m not going to repeat what I&amp;#8217;ve already said about Quarkus technically in previous entries (go look if you haven&amp;#8217;t seen them). However, I did want to make something clearer: the secret to Quarkus isn't re-architecting so many of the most popular Java frameworks and stacks, it&amp;#8217;s not our work around OpenJDK Hotspot, it&amp;#8217;s not how we use GraalVM (SubstrateVM), it&amp;#8217;s not Eclipse MicroProfile use, it&amp;#8217;s not a focus on serverless or Developer Joy, etc. There is no one thing that has really captured the attention of the community. It&amp;#8217;s all of these and more, which in many ways makes the relatively short period of time Quarkus has been &amp;ldquo;alive&amp;#8221; so much more impressive for what has been accomplished. &lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Now 1.0 isn&amp;#8217;t the end of the road by any means! The community has great aspirations and goals ahead of them. We want to appeal to the broadest possible range of Java developers (ok, maybe other JVM languages too on a case by case basis). I won&amp;#8217;t spoil the surprises to come (though since everything we&amp;#8217;re doing is public, it&amp;#8217;s not hard to find out). But suffice it to say I expect to see more around MicroProfile adoption and influence, more integration with Kubernetes/Knative/Istio etc., tooling improvements, FaaS, &amp;hellip; &lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;And of course another future step is to a fully supported product and for Quarkus to be used in other products, e.g., Red Hat Integration (where Camel-K will reside, for instance) and Red Hat Automation (where Kogito will reside). Busy times ahead but also exciting times! &lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:c1cabb3f-3967-407f-9501-e4cc3d27692a] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rMly-80iKL0" height="1" width="1" alt=""/&gt;</content><summary>By now you should all know that Quarkus 1.0 is out! Congratulations to the entire community team who have taken an initial idea we had in early 2018 through a public release almost a year later and then to a 1.0 only about 8 months after that. This is a significant milestone for everyone involved and particularly for helping to make Java relevant in the modern Kubernetes world. If you’ve been invo...</summary><dc:creator>Mark Little</dc:creator><dc:date>2019-11-07T12:46:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/mark.little/2019/11/07/quarkus-10</feedburner:origLink></entry><entry><title>Support lifecycle for Clang/LLVM, Go, and Rust in Red Hat Enterprise Linux 8</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Sq_624d0bQE/" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Go" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><category term="Rust" scheme="searchisko:content:tags" /><author><name>Tom Stellard</name></author><id>searchisko:content:id:jbossorg_blog-support_lifecycle_for_clang_llvm_go_and_rust_in_red_hat_enterprise_linux_8</id><updated>2019-11-07T08:01:05Z</updated><published>2019-11-07T08:01:05Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-ups-iq-intelligent-operating-system-latest-release-red-hat-enterprise-linux-8?sc_cid=701f2000000tyBjAAI"&gt;Red Hat Enterprise Linux (RHEL) 8.1.0&lt;/a&gt; includes updates to our llvm-toolset, &lt;a href="https://developers.redhat.com/blog/2019/06/24/go-and-fips-140-2-on-red-hat-enterprise-linux/"&gt;go-toolset&lt;/a&gt;, and rust-toolset application streams, which provide developers with up-to-date versions of these &lt;a href="https://developers.redhat.com/products/gcc-clang-llvm-go-rust/overview"&gt;compiler toolchains&lt;/a&gt;. The upstream projects for these streams move very quickly with new feature releases every six months for LLVM and Go, and every six weeks (!) for Rust. The communities around these toolchains encourage users to users to always stay up-to-date with the latest releases, which is why we try to get new versions into Red Hat Enterprise Linux as quickly as we can.&lt;/p&gt; &lt;p&gt;From a support perspective, we will continue to support these application streams for the entire life of &lt;a href="https://developers.redhat.com/rhel8/"&gt;RHEL 8&lt;/a&gt;. We will provide new features and bug fixes within the stream by updating to newer upstream releases on a regular basis. For llvm-toolset and go-toolset, you can expect stream updates every six months, and for rust-toolset you can expect updates every three months.&lt;span id="more-645807"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The Go and Rust languages continue to evolve and add new features with each compiler update, which is why so many users are interested in getting the latest versions of the compilers. At the same time, these compilers are designed to remain compatible with older code. So, even as we advance to newer versions of Go and Rust within the RHEL 8 application streams, you should not need to update your codebase to keep it compilable. Once you&amp;#8217;ve compiled your valid code using the Go or Rust application stream, you can make the assumption that it will continue to compile with that stream for the full life of RHEL 8.&lt;/p&gt; &lt;p&gt;We are excited to continue to bring you the latest and greatest in new compiler technologies. Stay tuned to the Red Hat Developer blog to learn more about what you can do with LLVM, Go, and Rust.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#38;linkname=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F07%2Fsupport-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8%2F&amp;#038;title=Support%20lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust%20in%20Red%20Hat%20Enterprise%20Linux%208" data-a2a-url="https://developers.redhat.com/blog/2019/11/07/support-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8/" data-a2a-title="Support lifecycle for Clang/LLVM, Go, and Rust in Red Hat Enterprise Linux 8"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/07/support-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8/"&gt;Support lifecycle for Clang/LLVM, Go, and Rust in Red Hat Enterprise Linux 8&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Sq_624d0bQE" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Enterprise Linux (RHEL) 8.1.0 includes updates to our llvm-toolset, go-toolset, and rust-toolset application streams, which provide developers with up-to-date versions of these compiler toolchains. The upstream projects for these streams move very quickly with new feature releases every six months for LLVM and Go, and every six weeks (!) for Rust. The communities around these toolchains en...</summary><dc:creator>Tom Stellard</dc:creator><dc:date>2019-11-07T08:01:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/07/support-lifecycle-for-clang-llvm-go-and-rust-in-red-hat-enterprise-linux-8/</feedburner:origLink></entry></feed>
